[{"/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/index.tsx":"1","/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/reportWebVitals.ts":"2","/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/App.tsx":"3","/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/home/Home.tsx":"4","/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/auth/Auth.tsx":"5","/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/auth/Login.tsx":"6","/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/auth/Register.tsx":"7","/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/home/Header.tsx":"8","/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/home/DoorsImages.tsx":"9","/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/home/Routers.tsx":"10","/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/home/Footer.tsx":"11"},{"size":500,"mtime":1607786181611,"results":"12","hashOfConfig":"13"},{"size":425,"mtime":1607786181612,"results":"14","hashOfConfig":"13"},{"size":2486,"mtime":1610503085752,"results":"15","hashOfConfig":"13"},{"size":988,"mtime":1610501572880,"results":"16","hashOfConfig":"13"},{"size":3293,"mtime":1610502955141,"results":"17","hashOfConfig":"13"},{"size":2428,"mtime":1610495174955,"results":"18","hashOfConfig":"13"},{"size":3328,"mtime":1610494727414,"results":"19","hashOfConfig":"13"},{"size":1833,"mtime":1610501302568,"results":"20","hashOfConfig":"13"},{"size":1854,"mtime":1610321228680,"results":"21","hashOfConfig":"13"},{"size":3797,"mtime":1610494959253,"results":"22","hashOfConfig":"13"},{"size":608,"mtime":1610502038650,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"ivhg93",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"26"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/index.tsx",[],["53","54"],"/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/reportWebVitals.ts",[],"/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/App.tsx",["55","56"],"/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/home/Home.tsx",["57"],"import React, { Component } from 'react';\nimport { Button, Container, Row } from 'reactstrap';\n\nimport DoorsImages from '../home/DoorsImages';\n\nclass Home extends React.Component {\n  render() {\n    return (\n      <div>\n        <Container className=\"platinum\">\n          <Row>\n            <br />\n            <h1 className=\"welcome\">WELCOME TO\n          <br></br>\n          THE PLATINUM RULE</h1>\n            <h2>A helpful place\n            <br></br>\n            for neighbors.</h2>\n            <br />\n          </Row>\n\n          <Row className=\"dustyBlue\">\n            <br />\n            <br />\n          </Row>\n        </Container>\n        <DoorsImages />\n        <Row className=\"dustyBlue\">\n          <br />\n          <br />\n        </Row>\n        <br />\n        <Container>\n          <Button href='/user/login'>Login</Button>\n          <br />\n          <br />\n          <Button href='/user/register'>Register</Button>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default Home;","/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/auth/Auth.tsx",["58"],"/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/auth/Login.tsx",["59","60"],"import React, { Component } from \"react\";\nimport { Form, FormGroup, Input, Button } from 'reactstrap';\n\ntype LoginAcceptedProps = {\n  email: string;\n  password: string;\n  setEmail: (e: any) => any;\n  setPassword: (e: any) => any;\n  sessionToken: any;\n  updateToken: any;\n  getToken: any;\n}\n\nclass Login extends React.Component<LoginAcceptedProps, {}> {\n  constructor(props: LoginAcceptedProps) {\n    super(props)\n  }\n\n  // loginToggle = () => {\n  //   this.setState(!this.login)\n  // }\n\n  updateToken = (newToken: any) => {\n    localStorage.setItem('token', newToken);\n    this.setState({ sessionToken: newToken });\n    console.log(newToken);\n  };\n\n  handleSubmit = (event: any) => {\n    event.preventDefault();\n    fetch(`http://localhost:3000/user/${'login' ? 'login' : 'register'}`, {\n      method: 'POST',\n      body: JSON.stringify({\n        user: {\n          email: this.props.email,\n          password: this.props.password\n        }\n      }),\n      headers: new Headers({\n        'Content-Type': 'application/json'\n      })\n    })\n      .then((response) => {\n        if (response.status === 200) {\n          console.log(\"Login successful.\");\n        } else {\n          console.log(\"Login failed.\");\n        }\n        return response.json();\n      })\n      .then((data) => {\n        this.updateToken(data.sessionToken);\n      })\n  }\n\n  render() {\n    return (\n      <div>\n        <h4 className=\"loginHeader\">Login</h4>\n        <Form className=\"login\" onSubmit={this.handleSubmit}>\n          <FormGroup>\n            <div className=\"input-group mb-3\">\n              <Input\n                className=\"email\"\n                name=\"email\"\n                placeholder=\"Email\"\n                onChange={(e) =>\n                  this.props.setEmail(e.target.value)}\n                value={this.props.email} />\n              {/* <div className=\"input-group-append\">\n                <span className=\"input-group-text\" id=\"basic-addon2\">@example.com</span>\n              </div> */}\n            </div>\n          </FormGroup>\n          <FormGroup>\n            <Input\n              className=\"password\"\n              name=\"password\"\n              placeholder=\"Password\"\n              onChange={(e) =>\n                this.props.setPassword(e.target.value)}\n              value={this.props.password} />\n          </FormGroup>\n          <Button type=\"submit\">Login</Button>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default Login;","/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/auth/Register.tsx",["61"],"import React, { Component } from 'react';\nimport { Container, Form, FormGroup, Input, Button } from 'reactstrap';\n\ntype RegisterAcceptedProps = {\n  email: string;\n  password: string;\n  firstName: string;\n  lastName: string;\n  username: string;\n  zipCode: number;\n  setEmail: (e: any) => any;\n  setPassword: (e: any) => any;\n  setFirstName: (e: any) => any;\n  setLastName: (e: any) => any;\n  setUsername: (e: any) => any;\n  setZipCode: (e: any) => any;\n  updateToken: any;\n  sessionToken: any;\n}\n\n\nclass Register extends React.Component<RegisterAcceptedProps, {}> {\n  constructor(props: RegisterAcceptedProps) {\n    super(props)\n  }\n\n  handleSubmit = (event: any) => {\n    event.preventDefault();\n    fetch(`http://localhost:3000/user/register`, {\n      method: 'POST',\n      body: JSON.stringify({\n        user: {\n          firstName: this.props.firstName,\n          lastName: this.props.lastName,\n          username: this.props.username,\n          zipCode: this.props.zipCode,\n          email: this.props.email,\n          password: this.props.password\n        }\n      }),\n      headers: new Headers({\n        'Content-Type': 'application/json'\n      })\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        this.props.updateToken(data.sessionToken)\n      })\n  }\n\n\n  render() {\n    return (\n      <Container>\n        <h4 className=\"registerHeader\">Register</h4>\n        <Form className=\"register\" onSubmit={this.handleSubmit}>\n          <FormGroup>\n            <Input\n              className=\"firstName\"\n              name=\"firstName\"\n              placeholder=\"First Name\"\n              onChange={(e) =>\n                this.props.setFirstName(e.target.value)}\n              value={this.props.firstName} />\n          </FormGroup>\n          <FormGroup>\n            <Input\n              className=\"lastName\"\n              name=\"lastName\"\n              placeholder=\"Last Name\"\n              onChange={(e) => this.props.setLastName(e.target.value)}\n              value={this.props.lastName} />\n          </FormGroup>\n          <FormGroup>\n            <Input\n              className=\"username\"\n              name=\"username\"\n              placeholder=\"Username\"\n              onChange={(e) =>\n                this.props.setUsername(e.target.value)}\n              value={this.props.username} />\n          </FormGroup>\n          <FormGroup>\n            <Input\n              className=\"zipCode\"\n              name=\"zipCode\"\n              placeholder=\"Zip Code\"\n              onChange={(e) =>\n                this.props.setZipCode(e.target.value)}\n              value={this.props.zipCode} />\n          </FormGroup>\n          <FormGroup>\n            <Input\n              className=\"email\"\n              name=\"email\"\n              placeholder=\"Email\"\n              onChange={(e) =>\n                this.props.setEmail(e.target.value)}\n              value={this.props.email} />\n          </FormGroup>\n          <FormGroup>\n            <Input\n              className=\"password\"\n              name=\"password\"\n              placeholder=\"Password\"\n              onChange={(e) =>\n                this.props.setPassword(e.target.value)}\n              value={this.props.password} />\n          </FormGroup>\n          <Button type=\"submit\">Register</Button>\n        </Form>\n      </Container>\n    );\n  }\n}\n\nexport default Register;","/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/home/Header.tsx",["62","63","64","65","66"],"import 'bootstrap/dist/css/bootstrap.css';\nimport React, { Component } from 'react';\nimport { Button, Collapse, Navbar, NavbarToggler, Nav, NavItem, NavLink, Row } from 'reactstrap';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\ntype HeaderStates = {\n isOpen: boolean;\n}\n\nclass Header extends React.Component<{}, HeaderStates> {\n    constructor(props: any) {\n        super(props);\n        this.toggle = this.toggle.bind(this);\n        this.state = {\n          isOpen: false\n        };\n    }\n    toggle() {\n        this.setState({\n          isOpen: !this.state.isOpen\n        });\n      }\n\n    clickLogout = () => {\n        window.localStorage.clear();\n        window.location.href = `localhost:3000`;\n    };\n\n    render() {\n        return (\n            <div>\n                <Navbar className=\"navbar\">\n                        <NavbarToggler className=\"mr-2\" id=\"hamburger\" right onClick={this.toggle} />\n                        <Collapse isOpen={this.state.isOpen} navbar>\n                            <Nav navbar>\n                                <NavItem>\n                                    <NavLink href=\"/\" >Home</NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink href=\"\">Link</NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink href=\"\">Link</NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <Button onClick={this.clickLogout}>Logout</Button>\n                                </NavItem>\n                            </Nav>\n                        </Collapse>\n                </Navbar>\n            </div>\n        )\n    }\n}\nexport default Header;","/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/home/DoorsImages.tsx",["67","68","69","70","71","72","73","74","75","76","77","78"],"import React, { Component } from 'react';\nimport Carousel, { autoplayPlugin } from '@brainhubeu/react-carousel';\nimport '@brainhubeu/react-carousel/lib/style.css';\n\nimport doors1 from '../../assets/doors1.jpg';\nimport doors2 from '../../assets/doors2.jpg';\nimport doors3 from '../../assets/doors3.jpg';\nimport doors4 from '../../assets/doors4.jpg';\nimport doors5 from '../../assets/doors5.jpg';\nimport doors6 from '../../assets/doors6.jpg';\nimport doors7 from '../../assets/doors7.jpg';\nimport doors8 from '../../assets/doors8.jpg';\nimport doors9 from '../../assets/doors9.jpg';\nimport doors10 from '../../assets/doors10.jpg';\n\nclass DoorsImages extends React.Component {\n    constructor(props: any) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <Carousel\n                plugins={[\n                    'centered',\n                    {\n                        resolve: autoplayPlugin,\n                        options: {\n                            interval: 2000,\n                        }\n                    },\n                ]}\n                animationSpeed={500}\n            >\n                <img src={doors1} className='doors' width='100%'/>\n                <img src={doors2} className='doors' width='100%'/>\n                <img src={doors3} className='doors' width='100%'/>\n                <img src={doors4} className='doors' width='100%'/>\n                <img src={doors5} className='doors' width='100%'/>\n                <img src={doors6} className='doors' width='100%'/>\n                <img src={doors7} className='doors' width='100%'/>\n                <img src={doors8} className='doors' width='100%'/>\n                <img src={doors9} className='doors' width='100%'/>\n                <img src={doors10} className='doors' width='100%'/>\n            </Carousel>\n        )\n    }\n}\n\nexport default DoorsImages;","/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/home/Routers.tsx",["79"],"import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport Login from '../auth/Login';\nimport Register from '../auth/Register';\n\ntype RouterStates = {\n    email: string;\n    password: string;\n    firstName: string;\n    lastName: string;\n    username: string;\n    zipCode: number;\n    sessionToken: any;\n    updateToken: any;\n    getToken: any;\n    setEmail: (e: any) => any;\n    setPassword: (e: any) => any;\n    setFirstName: (e: any) => any;\n    setLastName: (e: any) => any;\n    setUsername: (e: any) => any;\n    setZipCode: (e: any) => any;\n}\n\nclass Routers extends React.Component<{}, RouterStates> {\n    constructor(props: any) {\n        super(props)\n        this.state = {\n            email: \"\",\n            password: \"\",\n            firstName: \"\",\n            lastName: \"\",\n            username: \"\",\n            zipCode: 0,\n            sessionToken: \"\",\n            updateToken: \"\",\n            getToken: \"\",\n            setEmail: (e) => {\n                this.setState({\n                    email: e\n                })\n            },\n            setPassword: (e) => {\n                this.setState({\n                    password: e\n                })\n            },\n            setFirstName: (e) => {\n                this.setState({\n                    firstName: e\n                })\n            },\n            setLastName: (e) => {\n                this.setState({\n                    lastName: e\n                })\n            },\n            setUsername: (e) => {\n                this.setState({\n                    username: e\n                })\n            },\n            setZipCode: (e) => {\n                this.setState({\n                    zipCode: e\n                })\n            }\n        }\n    }\n\n\n    render() {\n        return (\n            <div>\n                <Router>\n                    <Switch>\n                        <Route exact path=\"/about\"></Route>\n\n                        <Route exact path=\"/\"></Route>\n\n                        <Route exact path=\"/user/login\">\n                            <Login\n                                email={this.state.email}\n                                password={this.state.password}\n                                setEmail={this.state.setEmail}\n                                setPassword={this.state.setPassword}\n                                sessionToken={this.state.sessionToken}\n                                getToken={this.state.getToken}\n                                updateToken={this.state.updateToken}\n                                 />\n                        </Route>\n\n                        <Route exact path=\"/user/register\">\n                            <Register\n                                firstName={this.state.firstName}\n                                lastName={this.state.lastName}\n                                email={this.state.email}\n                                username={this.state.username}\n                                zipCode={this.state.zipCode}\n                                password={this.state.password}\n                                setEmail={this.state.setEmail}\n                                setPassword={this.state.setPassword}\n                                setFirstName={this.state.setFirstName}\n                                setLastName={this.state.setLastName}\n                                setUsername={this.state.setUsername}\n                                setZipCode={this.state.setZipCode}\n                                sessionToken={this.state.sessionToken}\n                                updateToken={this.state.updateToken} />\n                        </Route>\n\n                    </Switch>\n                </Router>\n            </div>\n        );\n    }\n}\n\nexport default Routers;","/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/home/Footer.tsx",[],{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":1,"column":10,"nodeType":"86","messageId":"87","endLine":1,"endColumn":16},{"ruleId":"84","severity":1,"message":"88","line":2,"column":17,"nodeType":"86","messageId":"87","endLine":2,"endColumn":26},{"ruleId":"84","severity":1,"message":"88","line":1,"column":17,"nodeType":"86","messageId":"87","endLine":1,"endColumn":26},{"ruleId":"84","severity":1,"message":"88","line":1,"column":17,"nodeType":"86","messageId":"87","endLine":1,"endColumn":26},{"ruleId":"84","severity":1,"message":"88","line":1,"column":17,"nodeType":"86","messageId":"87","endLine":1,"endColumn":26},{"ruleId":"89","severity":1,"message":"90","line":15,"column":3,"nodeType":"91","messageId":"92","endLine":17,"endColumn":4},{"ruleId":"84","severity":1,"message":"88","line":1,"column":17,"nodeType":"86","messageId":"87","endLine":1,"endColumn":26},{"ruleId":"84","severity":1,"message":"88","line":2,"column":17,"nodeType":"86","messageId":"87","endLine":2,"endColumn":26},{"ruleId":"84","severity":1,"message":"93","line":3,"column":74,"nodeType":"86","messageId":"87","endLine":3,"endColumn":77},{"ruleId":"84","severity":1,"message":"94","line":4,"column":27,"nodeType":"86","messageId":"87","endLine":4,"endColumn":33},{"ruleId":"84","severity":1,"message":"95","line":4,"column":35,"nodeType":"86","messageId":"87","endLine":4,"endColumn":40},{"ruleId":"84","severity":1,"message":"96","line":4,"column":42,"nodeType":"86","messageId":"87","endLine":4,"endColumn":48},{"ruleId":"84","severity":1,"message":"88","line":1,"column":17,"nodeType":"86","messageId":"87","endLine":1,"endColumn":26},{"ruleId":"89","severity":1,"message":"90","line":17,"column":5,"nodeType":"91","messageId":"92","endLine":19,"endColumn":6},{"ruleId":"97","severity":1,"message":"98","line":35,"column":17,"nodeType":"99","endLine":35,"endColumn":67},{"ruleId":"97","severity":1,"message":"98","line":36,"column":17,"nodeType":"99","endLine":36,"endColumn":67},{"ruleId":"97","severity":1,"message":"98","line":37,"column":17,"nodeType":"99","endLine":37,"endColumn":67},{"ruleId":"97","severity":1,"message":"98","line":38,"column":17,"nodeType":"99","endLine":38,"endColumn":67},{"ruleId":"97","severity":1,"message":"98","line":39,"column":17,"nodeType":"99","endLine":39,"endColumn":67},{"ruleId":"97","severity":1,"message":"98","line":40,"column":17,"nodeType":"99","endLine":40,"endColumn":67},{"ruleId":"97","severity":1,"message":"98","line":41,"column":17,"nodeType":"99","endLine":41,"endColumn":67},{"ruleId":"97","severity":1,"message":"98","line":42,"column":17,"nodeType":"99","endLine":42,"endColumn":67},{"ruleId":"97","severity":1,"message":"98","line":43,"column":17,"nodeType":"99","endLine":43,"endColumn":67},{"ruleId":"97","severity":1,"message":"98","line":44,"column":17,"nodeType":"99","endLine":44,"endColumn":68},{"ruleId":"84","severity":1,"message":"88","line":1,"column":17,"nodeType":"86","messageId":"87","endLine":1,"endColumn":26},"no-native-reassign",["100"],"no-negated-in-lhs",["101"],"@typescript-eslint/no-unused-vars","'render' is defined but never used.","Identifier","unusedVar","'Component' is defined but never used.","@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'Row' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]