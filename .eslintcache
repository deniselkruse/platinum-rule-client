[{"/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/index.tsx":"1","/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/reportWebVitals.ts":"2","/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/App.tsx":"3","/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/home/Home.tsx":"4","/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/auth/Auth.tsx":"5","/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/auth/Login.tsx":"6","/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/auth/Register.tsx":"7","/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/home/Header.tsx":"8","/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/home/DoorsImages.tsx":"9","/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/home/Footer.tsx":"10","/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/volunteers/CreateHelpPost.tsx":"11","/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/home/Menu.tsx":"12"},{"size":500,"mtime":1607786181611,"results":"13","hashOfConfig":"14"},{"size":425,"mtime":1607786181612,"results":"15","hashOfConfig":"14"},{"size":2670,"mtime":1610733395958,"results":"16","hashOfConfig":"14"},{"size":988,"mtime":1610731911957,"results":"17","hashOfConfig":"14"},{"size":3313,"mtime":1610732910598,"results":"18","hashOfConfig":"14"},{"size":2599,"mtime":1610732683580,"results":"19","hashOfConfig":"14"},{"size":3167,"mtime":1610509854493,"results":"20","hashOfConfig":"14"},{"size":1850,"mtime":1610669764306,"results":"21","hashOfConfig":"14"},{"size":1854,"mtime":1610508176429,"results":"22","hashOfConfig":"14"},{"size":608,"mtime":1610502038650,"results":"23","hashOfConfig":"14"},{"size":5212,"mtime":1610731325512,"results":"24","hashOfConfig":"14"},{"size":3687,"mtime":1610733432901,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"ivhg93",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"28"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/index.tsx",[],["58","59"],"/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/reportWebVitals.ts",[],"/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/App.tsx",["60","61"],"/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/home/Home.tsx",["62"],"import React, { Component } from 'react';\nimport { Button, Container, Row } from 'reactstrap';\n\nimport DoorsImages from '../home/DoorsImages';\n\nclass Home extends React.Component {\n  render() {\n    return (\n      <div>\n        <Container className=\"platinum\">\n          <Row>\n            <br />\n            <h1 className=\"welcome\">WELCOME TO\n          <br></br>\n          THE PLATINUM RULE</h1>\n            <h2>A helpful place\n            <br></br>\n            for neighbors.</h2>\n            <br />\n          </Row>\n\n          <Row className=\"dustyBlue\">\n            <br />\n            <br />\n          </Row>\n        </Container>\n        <DoorsImages />\n        <Row className=\"dustyBlue\">\n          <br />\n          <br />\n        </Row>\n        <br />\n        <Container>\n          <Button href='/user/login'>Login</Button>\n          <br />\n          <br />\n          <Button href='/user/register'>Register</Button>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default Home;","/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/auth/Auth.tsx",["63","64"],"import React, { Component } from \"react\";\nimport { Container, Row, Col } from 'reactstrap';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport Login from './Login';\nimport Register from './Register';\n\ntype AuthStates = {\n  email: string;\n  password: string;\n  firstName: string;\n  lastName: string;\n  username: string;\n  zipCode: number;\n  sessionToken: any;\n  updateToken: any;\n  getToken: any;\n  setEmail: (e: any) => any;\n  setPassword: (e: any) => any;\n  setFirstName: (e: any) => any;\n  setLastName: (e: any) => any;\n  setUsername: (e: any) => any;\n  setZipCode: (e: any) => any;\n}\n\nclass Auth extends React.Component<{updateToken: any}, AuthStates> {\n  constructor(props: any) {\n    super(props)\n    this.state = {\n      email: \"\",\n      password: \"\",\n      firstName: \"\",\n      lastName: \"\",\n      username: \"\",\n      zipCode: 0,\n      sessionToken: \"\",\n      getToken: \"\",\n      updateToken: \"\",\n      setEmail: (e) => {\n        this.setState({\n          email: e\n        })\n      },\n      setPassword: (e) => {\n        this.setState({\n          password: e\n        })\n      },\n      setFirstName: (e) => {\n        this.setState({\n          firstName: e\n        })\n      },\n      setLastName: (e) => {\n        this.setState({\n          lastName: e\n        })\n      },\n      setUsername: (e) => {\n        this.setState({\n          username: e\n        })\n      },\n      setZipCode: (e) => {\n        this.setState({\n          zipCode: e\n        })\n      }\n    }\n  }\n  render() {\n    return (\n      <Container className=\"auth-container\">\n        <Row>\n          <Col md=\"6\">\n            {/* <Router> */}\n              <Switch>\n                <Route exact path=\"/user/login\">\n                  <Login\n                    email={this.state.email}\n                    password={this.state.password}\n                    setEmail={this.state.setEmail}\n                    setPassword={this.state.setPassword}\n                    sessionToken={this.state.sessionToken}\n                    getToken={this.state.getToken}\n                    updateToken={this.props.updateToken} />\n                </Route>\n              {/* </Switch> */}\n            {/* </Router> */}\n          {/* </Col> */}\n          {/* <Col md=\"6\"> */}\n            {/* <Router> */}\n              {/* <Switch> */}\n                <Route exact path=\"/user/register\">\n                  <Register\n                    firstName={this.state.firstName}\n                    lastName={this.state.lastName}\n                    email={this.state.email}\n                    username={this.state.username}\n                    zipCode={this.state.zipCode}\n                    password={this.state.password}\n                    setEmail={this.state.setEmail}\n                    setPassword={this.state.setPassword}\n                    setFirstName={this.state.setFirstName}\n                    setLastName={this.state.setLastName}\n                    setUsername={this.state.setUsername}\n                    setZipCode={this.state.setZipCode}\n                    sessionToken={this.state.sessionToken}\n                    updateToken={this.state.updateToken} />\n                </Route>\n              </Switch>\n            {/* </Router> */}\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default Auth;","/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/auth/Login.tsx",["65"],"import React, { Component } from \"react\";\nimport { Form, FormGroup, Input, Button } from 'reactstrap';\nimport {Redirect} from 'react-router-dom';\n\n\ntype LoginAcceptedProps = {\n  email: string;\n  password: string;\n  setEmail: (e: any) => any;\n  setPassword: (e: any) => any;\n  sessionToken: any;\n  updateToken: any;\n  getToken: any;\n}\n\nclass Login extends React.Component<LoginAcceptedProps, {redirect: null | string}> {\n  constructor(props: LoginAcceptedProps) {\n    super(props)\n    this.state = {\n      redirect: null\n    }\n  }\n\n  // updateToken = (newToken: any) => {\n  //   localStorage.setItem('token', newToken);\n  //   this.setState({ sessionToken: newToken });\n  //   console.log(newToken);\n  // };\n\n  handleSubmit = (event: any) => {\n    event.preventDefault();\n    fetch(`http://localhost:3000/user/login`, {\n      method: 'POST',\n      body: JSON.stringify({\n        user: {\n          email: this.props.email,\n          password: this.props.password\n        }\n      }),\n      headers: new Headers({\n        'Content-Type': 'application/json'\n      })\n    })\n      .then((response) => {\n        if (response.status === 200) {\n          console.log(\"Login successful.\");\n        } else {\n          console.log(\"Login failed.\");\n        }\n        return response.json();\n      })\n      .then((data) => {\n        this.props.updateToken(data.sessionToken);\n        this.setState({redirect: '/menu'})\n      })\n  }\n\n  render() {\n    if (this.state.redirect){\n      return <Redirect to = {this.state.redirect} />\n    }\n    return (\n      <div>\n        <h4 className=\"loginHeader\">Login</h4>\n        <Form className=\"login\" onSubmit={this.handleSubmit}>\n          <FormGroup>\n            <div className=\"input-group mb-3\">\n              <Input\n                className=\"email\"\n                name=\"email\"\n                placeholder=\"Email\"\n                onChange={(e) =>\n                  this.props.setEmail(e.target.value)}\n                value={this.props.email} />\n              {/* <div className=\"input-group-append\">\n                <span className=\"input-group-text\" id=\"basic-addon2\">@example.com</span>\n              </div> */}\n            </div>\n          </FormGroup>\n          <FormGroup>\n            <Input\n              className=\"password\"\n              name=\"password\"\n              placeholder=\"Password\"\n              onChange={(e) =>\n                this.props.setPassword(e.target.value)}\n              value={this.props.password} />\n          </FormGroup>\n          <Button type=\"submit\">Login</Button>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default (Login);","/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/auth/Register.tsx",["66","67"],"import React, { Component } from 'react';\nimport { Container, Form, FormGroup, Input, Button } from 'reactstrap';\n\ntype RegisterAcceptedProps = {\n  email: string;\n  password: string;\n  firstName: string;\n  lastName: string;\n  username: string;\n  zipCode: number;\n  setEmail: (e: any) => any;\n  setPassword: (e: any) => any;\n  setFirstName: (e: any) => any;\n  setLastName: (e: any) => any;\n  setUsername: (e: any) => any;\n  setZipCode: (e: any) => any;\n  updateToken: any;\n  sessionToken: any;\n}\n\n\nclass Register extends React.Component<RegisterAcceptedProps, {}> {\n  constructor(props: RegisterAcceptedProps) {\n    super(props)\n  }\n\n  handleSubmit = (event: any) => {\n    event.preventDefault();\n    fetch(`http://localhost:3000/user/register`, {\n      method: 'POST',\n      body: JSON.stringify({\n        user: {\n          firstName: this.props.firstName,\n          lastName: this.props.lastName,\n          username: this.props.username,\n          zipCode: this.props.zipCode,\n          email: this.props.email,\n          password: this.props.password\n        }\n      }),\n      headers: new Headers({\n        'Content-Type': 'application/json'\n      })\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        this.props.updateToken(data.sessionToken)\n      })\n  }\n\n\n  render() {\n    return (\n      <Container>\n        <h4 className=\"registerHeader\">Register</h4>\n        <Form className=\"register\" onSubmit={this.handleSubmit}>\n          <FormGroup>\n            <Input\n              className=\"firstName\"\n              placeholder=\"First Name\"\n              onChange={(e) =>\n                this.props.setFirstName(e.target.value)}\n              value={this.props.firstName} />\n          </FormGroup>\n          <FormGroup>\n            <Input\n              className=\"lastName\"\n              placeholder=\"Last Name\"\n              onChange={(e) =>\n                this.props.setLastName(e.target.value)}\n              value={this.props.lastName} />\n          </FormGroup>\n          <FormGroup>\n            <Input\n              className=\"username\"\n              placeholder=\"Username\"\n              onChange={(e) =>\n                this.props.setUsername(e.target.value)}\n              value={this.props.username} />\n          </FormGroup>\n          <FormGroup>\n            <Input\n              className=\"zipCode\"\n              placeholder=\"Zip Code\"\n              onChange={(e) =>\n                this.props.setZipCode(e.target.value)}\n              value={this.props.zipCode} />\n          </FormGroup>\n          <FormGroup>\n            <Input\n              className=\"email\"\n              placeholder=\"Email\"\n              onChange={(e) =>\n                this.props.setEmail(e.target.value)}\n              value={this.props.email} />\n          </FormGroup>\n          <FormGroup>\n            <Input\n              className=\"password\"\n              placeholder=\"Password\"\n              onChange={(e) =>\n                this.props.setPassword(e.target.value)}\n              value={this.props.password} />\n          </FormGroup>\n          <Button type=\"submit\">Register</Button>\n        </Form>\n      </Container>\n    );\n  }\n}\n\nexport default Register;","/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/home/Header.tsx",["68","69","70","71","72"],"import 'bootstrap/dist/css/bootstrap.css';\nimport React, { Component } from 'react';\nimport { Button, Collapse, Navbar, NavbarToggler, Nav, NavItem, NavLink, Row } from 'reactstrap';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\ntype HeaderStates = {\n isOpen: boolean;\n}\n\nclass Header extends React.Component<{}, HeaderStates> {\n    constructor(props: any) {\n        super(props);\n        this.toggle = this.toggle.bind(this);\n        this.state = {\n          isOpen: false\n        };\n    }\n    toggle() {\n        this.setState({\n          isOpen: !this.state.isOpen\n        });\n      }\n\n    clickLogout = () => {\n        window.localStorage.clear();\n        window.location.href = `localhost:3000`;\n    };\n\n    render() {\n        return (\n            <div>\n                <Navbar className=\"navbar\">\n                        <NavbarToggler className=\"mr-2\" id=\"hamburger\" right onClick={this.toggle} />\n                        <Collapse isOpen={this.state.isOpen} navbar>\n                            <Nav navbar>\n                                <NavItem>\n                                    <NavLink href=\"/\" >Helper Posts</NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink href=\"\">Request Posts</NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink href=\"\">Link</NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <Button onClick={this.clickLogout}>Logout</Button>\n                                </NavItem>\n                            </Nav>\n                        </Collapse>\n                </Navbar>\n            </div>\n        )\n    }\n}\nexport default Header;","/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/home/DoorsImages.tsx",["73","74","75","76","77","78","79","80","81","82","83","84"],"import React, { Component } from 'react';\nimport Carousel, { autoplayPlugin } from '@brainhubeu/react-carousel';\nimport '@brainhubeu/react-carousel/lib/style.css';\n\nimport doors1 from '../../assets/doors1.jpg';\nimport doors2 from '../../assets/doors2.jpg';\nimport doors3 from '../../assets/doors3.jpg';\nimport doors4 from '../../assets/doors4.jpg';\nimport doors5 from '../../assets/doors5.jpg';\nimport doors6 from '../../assets/doors6.jpg';\nimport doors7 from '../../assets/doors7.jpg';\nimport doors8 from '../../assets/doors8.jpg';\nimport doors9 from '../../assets/doors9.jpg';\nimport doors10 from '../../assets/doors10.jpg';\n\nclass DoorsImages extends React.Component {\n    constructor(props: any) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <Carousel\n                plugins={[\n                    'centered',\n                    {\n                        resolve: autoplayPlugin,\n                        options: {\n                            interval: 2000,\n                        }\n                    },\n                ]}\n                animationSpeed={500}\n            >\n                <img src={doors1} className='doors' width='100%'/>\n                <img src={doors2} className='doors' width='100%'/>\n                <img src={doors3} className='doors' width='100%'/>\n                <img src={doors4} className='doors' width='100%'/>\n                <img src={doors5} className='doors' width='100%'/>\n                <img src={doors6} className='doors' width='100%'/>\n                <img src={doors7} className='doors' width='100%'/>\n                <img src={doors8} className='doors' width='100%'/>\n                <img src={doors9} className='doors' width='100%'/>\n                <img src={doors10} className='doors' width='100%'/>\n            </Carousel>\n        )\n    }\n}\n\nexport default DoorsImages;","/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/home/Footer.tsx",[],"/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/volunteers/CreateHelpPost.tsx",["85"],"import React, { Component } from 'react';\nimport { Button, Container, Form, FormGroup, Input, Label } from 'reactstrap';\n\ntype HelpProps = {\n    username: string;\n    firstName: string;\n    lastInitial: string;\n    owner: string;\n    title: string;\n    description: string;\n    availability: boolean;\n    instances: number;\n    date: Date;\n    inactiveDate: Date;\n    setUsername: (e: any) => any;\n    setFirstName: (e: any) => any;\n    setLastInitial: (e: any) => any;\n    setOwner: (e: any) => any;\n    setTitle: (e: any) => any;\n    setDescription: (e: any) => any;\n    setAvailability: (e: any) => any;\n    setInstances: (e: any) => any;\n    setDate: (e: any) => any;\n    setInactiveDate: (e: any) => any;\n    updateToken: any;\n    sessionToken: any;\n}\n\ntype HelpState = {\n    username: string;\n    firstName: string;\n    lastInitial: string;\n    owner: string;\n    title: string;\n    description: string;\n    availability: boolean;\n    instances: number;\n    date: any;\n    inactiveDate: any;\n    updateToken: any;\n    sessionToken: any;\n}\n\nclass CreateHelpPost extends React.Component<HelpProps, HelpState> {\n    constructor(props: HelpProps) {\n        super(props);\n        this.state = {\n            username: \"\",\n            firstName: \"\",\n            lastInitial: \"\",\n            owner: \"\",\n            title: \"\",\n            description: \"\",\n            availability: false,\n            instances: 0,\n            date: \" \",\n            inactiveDate: \" \",\n            updateToken: \"\",\n            sessionToken: \"\",\n        }\n    }\n\n\n    handleSubmit = (event: any) => {\n        event.preventDefault();\n        fetch(`http://localhost:3000/help/create`, {\n            method: 'POST',\n            body: JSON.stringify({\n                help: {\n                    username: this.props.username, // Auto populate\n                    firstName: this.props.firstName, // Auto populate\n                    lastInitial: this.props.lastInitial, // Auto populate; add code to grab first initial from last name\n                    owner: this.props.owner, // Auto populate\n                    title: this.props.title, // Dropdown menu\n                    description: this.props.description,\n                    availability: this.props.availability, // Check boxes\n                    instances: this.props.instances,\n                    date: this.props.date, // Auto populate\n                    inactiveDate: this.props.inactiveDate,\n                }\n            }),\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': this.props.sessionToken\n            })\n        })\n            .then((res) => res.json())\n            .then((data) => {\n                this.props.updateToken(data.sessionToken)\n            })\n    }\n\n    render() {\n\n        return (\n            <Container>\n                <h4 className=\"registerHeader\">New Helper Post</h4>\n                <p>{this.props.username}</p>\n                <p>{this.props.firstName}</p>\n                <p>{this.props.lastInitial}</p>\n                <Form className=\"register\" onSubmit={this.handleSubmit}>\n                    <FormGroup>\n                        <Input\n                            className=\"helpTitle\"\n                            type=\"select\"\n                            onChange={(e) => { this.setState({ title: e.target.value }) }}\n                            value={this.props.title}>\n                            <option value=\"\"></option>\n                            <option value=\"Rake Leaves\">Rake Leaves</option>\n                            <option value=\"Shovel Snow\">Shovel Snow</option>\n                            <option value=\"Take Out Trash\">Take Out Trash</option>\n                            <option value=\"Walk Dogs\">Walk Dogs</option>\n                        </Input>\n                        <Label htmlFor=\"title\" className=\"helpTitle\"></Label>\n                    </FormGroup>\n                    <FormGroup>\n                        <Input\n                            className=\"helpDescription\"\n                            type=\"textarea\"\n                            onChange={(e) => { this.setState({ description: e.target.value }) }}\n                            value={this.props.description}>\n                        </Input>\n                        <Label htmlFor=\"description\" className=\"helpDescription\">Description</Label>\n                    </FormGroup>\n                    <FormGroup>\n                        <Input\n                            className=\"instances\"\n                            type=\"checkbox\" \n                            onChange={(e) => {this.setState({ instances: 0}) }}\n                            value={this.props.instances}/>\n                        <Label htmlFor=\"instances\" className=\"instances\">Instances</Label>\n                    </FormGroup>\n                    <FormGroup>\n\n                    </FormGroup>\n                    <FormGroup>\n\n                    </FormGroup>\n                    <FormGroup>\n\n                    </FormGroup>\n                    <Button type=\"submit\">Submit Helper Post</Button>\n                </Form>\n            </Container>\n        );\n    }\n}\n\nexport default CreateHelpPost;","/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/home/Menu.tsx",["86","87"],{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":1,"column":10,"nodeType":"94","messageId":"95","endLine":1,"endColumn":16},{"ruleId":"92","severity":1,"message":"96","line":2,"column":17,"nodeType":"94","messageId":"95","endLine":2,"endColumn":26},{"ruleId":"92","severity":1,"message":"96","line":1,"column":17,"nodeType":"94","messageId":"95","endLine":1,"endColumn":26},{"ruleId":"92","severity":1,"message":"96","line":1,"column":17,"nodeType":"94","messageId":"95","endLine":1,"endColumn":26},{"ruleId":"92","severity":1,"message":"97","line":3,"column":27,"nodeType":"94","messageId":"95","endLine":3,"endColumn":33},{"ruleId":"92","severity":1,"message":"96","line":1,"column":17,"nodeType":"94","messageId":"95","endLine":1,"endColumn":26},{"ruleId":"92","severity":1,"message":"96","line":1,"column":17,"nodeType":"94","messageId":"95","endLine":1,"endColumn":26},{"ruleId":"98","severity":1,"message":"99","line":23,"column":3,"nodeType":"100","messageId":"101","endLine":25,"endColumn":4},{"ruleId":"92","severity":1,"message":"96","line":2,"column":17,"nodeType":"94","messageId":"95","endLine":2,"endColumn":26},{"ruleId":"92","severity":1,"message":"102","line":3,"column":74,"nodeType":"94","messageId":"95","endLine":3,"endColumn":77},{"ruleId":"92","severity":1,"message":"97","line":4,"column":27,"nodeType":"94","messageId":"95","endLine":4,"endColumn":33},{"ruleId":"92","severity":1,"message":"103","line":4,"column":35,"nodeType":"94","messageId":"95","endLine":4,"endColumn":40},{"ruleId":"92","severity":1,"message":"104","line":4,"column":42,"nodeType":"94","messageId":"95","endLine":4,"endColumn":48},{"ruleId":"92","severity":1,"message":"96","line":1,"column":17,"nodeType":"94","messageId":"95","endLine":1,"endColumn":26},{"ruleId":"98","severity":1,"message":"99","line":17,"column":5,"nodeType":"100","messageId":"101","endLine":19,"endColumn":6},{"ruleId":"105","severity":1,"message":"106","line":35,"column":17,"nodeType":"107","endLine":35,"endColumn":67},{"ruleId":"105","severity":1,"message":"106","line":36,"column":17,"nodeType":"107","endLine":36,"endColumn":67},{"ruleId":"105","severity":1,"message":"106","line":37,"column":17,"nodeType":"107","endLine":37,"endColumn":67},{"ruleId":"105","severity":1,"message":"106","line":38,"column":17,"nodeType":"107","endLine":38,"endColumn":67},{"ruleId":"105","severity":1,"message":"106","line":39,"column":17,"nodeType":"107","endLine":39,"endColumn":67},{"ruleId":"105","severity":1,"message":"106","line":40,"column":17,"nodeType":"107","endLine":40,"endColumn":67},{"ruleId":"105","severity":1,"message":"106","line":41,"column":17,"nodeType":"107","endLine":41,"endColumn":67},{"ruleId":"105","severity":1,"message":"106","line":42,"column":17,"nodeType":"107","endLine":42,"endColumn":67},{"ruleId":"105","severity":1,"message":"106","line":43,"column":17,"nodeType":"107","endLine":43,"endColumn":67},{"ruleId":"105","severity":1,"message":"106","line":44,"column":17,"nodeType":"107","endLine":44,"endColumn":68},{"ruleId":"92","severity":1,"message":"96","line":1,"column":17,"nodeType":"94","messageId":"95","endLine":1,"endColumn":26},{"ruleId":"92","severity":1,"message":"96","line":1,"column":17,"nodeType":"94","messageId":"95","endLine":1,"endColumn":26},{"ruleId":"92","severity":1,"message":"97","line":2,"column":27,"nodeType":"94","messageId":"95","endLine":2,"endColumn":33},"no-native-reassign",["108"],"no-negated-in-lhs",["109"],"@typescript-eslint/no-unused-vars","'render' is defined but never used.","Identifier","unusedVar","'Component' is defined but never used.","'Router' is defined but never used.","@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'Row' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]