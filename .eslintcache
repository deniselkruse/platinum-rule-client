[{"/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/index.tsx":"1","/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/reportWebVitals.ts":"2","/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/App.tsx":"3","/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/home/Home.tsx":"4","/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/auth/Auth.tsx":"5","/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/auth/Login.tsx":"6","/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/auth/Register.tsx":"7","/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/home/Header.tsx":"8","/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/home/DoorsImages.tsx":"9","/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/home/Footer.tsx":"10","/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/volunteers/CreateHelpPost.tsx":"11","/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/home/Menu.tsx":"12","/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/volunteers/ViewHelpPosts.tsx":"13","/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/recipients/CreateRequestPost.tsx":"14","/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/recipients/ViewRequestPosts.tsx":"15"},{"size":500,"mtime":1607786181611,"results":"16","hashOfConfig":"17"},{"size":425,"mtime":1607786181612,"results":"18","hashOfConfig":"17"},{"size":1682,"mtime":1611280219586,"results":"19","hashOfConfig":"17"},{"size":988,"mtime":1610731911957,"results":"20","hashOfConfig":"17"},{"size":3048,"mtime":1611282465769,"results":"21","hashOfConfig":"17"},{"size":2253,"mtime":1611270953193,"results":"22","hashOfConfig":"17"},{"size":3629,"mtime":1611271082734,"results":"23","hashOfConfig":"17"},{"size":1613,"mtime":1611113616914,"results":"24","hashOfConfig":"17"},{"size":1866,"mtime":1611114981527,"results":"25","hashOfConfig":"17"},{"size":608,"mtime":1610502038650,"results":"26","hashOfConfig":"17"},{"size":4419,"mtime":1611470916172,"results":"27","hashOfConfig":"17"},{"size":3995,"mtime":1611471262548,"results":"28","hashOfConfig":"17"},{"size":3300,"mtime":1611471329576,"results":"29","hashOfConfig":"17"},{"size":4509,"mtime":1611471014314,"results":"30","hashOfConfig":"17"},{"size":3383,"mtime":1611471355240,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"ivhg93",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"34"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/index.tsx",[],["72","73"],"/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/reportWebVitals.ts",[],"/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/App.tsx",["74"],"import React, { Component } from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport Header from './components/home/Header';\nimport Footer from './components/home/Footer';\nimport Home from './components/home/Home';\nimport Auth from './components/auth/Auth';\nimport Menu from './components/home/Menu';\n\n\ntype AppStates = {\n  sessionToken: any;\n}\n\nclass App extends React.Component<{}, AppStates> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      sessionToken: \"\",\n    }\n  }\n\n  getToken = () => {\n    if (localStorage.getItem('token')) {\n      this.setState({ sessionToken: localStorage.getItem('token') });\n    }\n  }\n\n  updateToken = (newToken: any) => {\n    localStorage.setItem('token', newToken);\n    this.setState({ sessionToken: newToken });\n    console.log(newToken);\n  };\n\n  clearToken = () => {\n    localStorage.clear();\n    this.setState({ sessionToken: '' });\n  };\n\n  componentDidMount(){\n    this.getToken()\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"verticalCenter\">\n          <Header clearToken={this.clearToken} />\n\n          <Router>\n            <Switch>\n              <Route exact path=\"/\">\n                <Home />\n              </Route>\n              <Route path=\"/user\">\n                <Auth updateToken={this.updateToken} />\n              </Route>\n              <Route path='/menu'>\n                <Menu sessionToken={this.state.sessionToken} />\n              </Route>\n            </Switch>\n          </Router>\n\n          <Footer />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/home/Home.tsx",["75"],"import React, { Component } from 'react';\nimport { Button, Container, Row } from 'reactstrap';\n\nimport DoorsImages from '../home/DoorsImages';\n\nclass Home extends React.Component {\n  render() {\n    return (\n      <div>\n        <Container className=\"platinum\">\n          <Row>\n            <br />\n            <h1 className=\"welcome\">WELCOME TO\n          <br></br>\n          THE PLATINUM RULE</h1>\n            <h2>A helpful place\n            <br></br>\n            for neighbors.</h2>\n            <br />\n          </Row>\n\n          <Row className=\"dustyBlue\">\n            <br />\n            <br />\n          </Row>\n        </Container>\n        <DoorsImages />\n        <Row className=\"dustyBlue\">\n          <br />\n          <br />\n        </Row>\n        <br />\n        <Container>\n          <Button href='/user/login'>Login</Button>\n          <br />\n          <br />\n          <Button href='/user/register'>Register</Button>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default Home;","/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/auth/Auth.tsx",["76"],"import React, { Component } from \"react\";\nimport { Container, Row, Col } from 'reactstrap';\nimport { Route, Switch } from 'react-router-dom';\n\nimport Login from './Login';\nimport Register from './Register';\n\ntype AuthStates = {\n  email: string;\n  password: string;\n  firstName: string;\n  lastName: string;\n  username: string;\n  zipCode: number;\n  setEmail: (e: any) => any;\n  setPassword: (e: any) => any;\n  setFirstName: (e: any) => any;\n  setLastName: (e: any) => any;\n  setUsername: (e: any) => any;\n  setZipCode: (e: any) => any;\n  sessionToken: any;\n  updateToken: any;\n  getToken: any;\n}\n\nclass Auth extends React.Component<{ updateToken: any }, AuthStates> {\n  constructor(props: any) {\n    super(props)\n    this.state = {\n      email: \"\",\n      password: \"\",\n      firstName: \"\",\n      lastName: \"\",\n      username: \"\",\n      zipCode: 0,\n      sessionToken: \"\",\n      getToken: \"\",\n      updateToken: \"\",\n      setEmail: (e) => {\n        this.setState({\n          email: e\n        })\n      },\n      setPassword: (e) => {\n        this.setState({\n          password: e\n        })\n      },\n      setFirstName: (e) => {\n        this.setState({\n          firstName: e\n        })\n      },\n      setLastName: (e) => {\n        this.setState({\n          lastName: e\n        })\n      },\n      setUsername: (e) => {\n        this.setState({\n          username: e\n        })\n      },\n      setZipCode: (e) => {\n        this.setState({\n          zipCode: e\n        })\n      }\n    }\n  }\n\n  \n  render() {\n    return (\n      <Container className=\"auth-container\">\n        <Row>\n          <Col md=\"6\">\n            <Switch>\n              <Route exact path=\"/user/login\">\n                <Login\n                  email={this.state.email}\n                  password={this.state.password}\n                  setEmail={this.state.setEmail}\n                  setPassword={this.state.setPassword}\n                  sessionToken={this.state.sessionToken}\n                  updateToken={this.props.updateToken} \n                  getToken={this.state.getToken}/>\n              </Route>\n              <Route exact path=\"/user/register\">\n                <Register\n                  firstName={this.state.firstName}\n                  lastName={this.state.lastName}\n                  email={this.state.email}\n                  username={this.state.username}\n                  zipCode={this.state.zipCode}\n                  password={this.state.password}\n                  setEmail={this.state.setEmail}\n                  setPassword={this.state.setPassword}\n                  setFirstName={this.state.setFirstName}\n                  setLastName={this.state.setLastName}\n                  setUsername={this.state.setUsername}\n                  setZipCode={this.state.setZipCode}\n                  sessionToken={this.state.sessionToken}\n                  updateToken={this.props.updateToken} \n                  getToken={this.state.getToken}/>\n              </Route>\n            </Switch>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default Auth;","/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/auth/Login.tsx",["77"],"import React, { Component } from \"react\";\nimport { Form, FormGroup, Input, Button } from 'reactstrap';\nimport {Redirect} from 'react-router-dom';\n\n\ntype LoginAcceptedProps = {\n  email: string;\n  password: string;\n  setEmail: (e: any) => any;\n  setPassword: (e: any) => any;\n  sessionToken: any;\n  updateToken: any;\n  getToken: any;\n}\n\nclass Login extends React.Component<LoginAcceptedProps, {redirect: null | string}> {\n  constructor(props: LoginAcceptedProps) {\n    super(props)\n    this.state = {\n      redirect: null\n    }\n  }\n\n  handleSubmit = (event: any) => {\n    event.preventDefault();\n    fetch(`http://localhost:3000/user/login`, {\n      method: 'POST',\n      body: JSON.stringify({\n        user: {\n          email: this.props.email,\n          password: this.props.password\n        }\n      }),\n      headers: new Headers({\n        'Content-Type': 'application/json'\n      })\n    })\n      .then((response) => {\n        if (response.status === 200) {\n          console.log(\"Login successful.\");\n        } else {\n          console.log(\"Login failed.\");\n        }\n        return response.json();\n      })\n      .then((data) => {\n        this.props.updateToken(data.sessionToken);\n        this.setState({redirect: '/menu'})\n      })\n  }\n\n  render() {\n    if (this.state.redirect){\n      return <Redirect to = {this.state.redirect} />\n    }\n    return (\n      <div>\n        <h4 className=\"loginHeader\">Login</h4>\n        <Form className=\"login\" onSubmit={this.handleSubmit}>\n          <FormGroup>\n            <div className=\"input-group mb-3\">\n              <Input\n                className=\"email\"\n                name=\"email\"\n                placeholder=\"Email\"\n                onChange={(e) =>\n                  this.props.setEmail(e.target.value)}\n                value={this.props.email} />\n            </div>\n          </FormGroup>\n          <FormGroup>\n            <Input\n              className=\"password\"\n              name=\"password\"\n              placeholder=\"Password\"\n              onChange={(e) =>\n                this.props.setPassword(e.target.value)}\n              value={this.props.password} />\n          </FormGroup>\n          <Button type=\"submit\">Login</Button>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default (Login);","/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/auth/Register.tsx",["78"],"import React, { Component } from 'react';\nimport { Container, Form, FormGroup, Input, Button } from 'reactstrap';\nimport {Redirect} from 'react-router-dom';\n\ntype RegisterAcceptedProps = {\n  email: string;\n  password: string;\n  firstName: string;\n  lastName: string;\n  username: string;\n  zipCode: number;\n  setEmail: (e: any) => any;\n  setPassword: (e: any) => any;\n  setFirstName: (e: any) => any;\n  setLastName: (e: any) => any;\n  setUsername: (e: any) => any;\n  setZipCode: (e: any) => any;\n  sessionToken: any;\n  updateToken: any;\n  getToken: any;\n}\n\n\nclass Register extends React.Component<RegisterAcceptedProps, {redirect: null | string}> {\n  constructor(props: RegisterAcceptedProps) {\n    super(props)\n    this.state = {\n      redirect: null\n    }\n  }\n\n  handleSubmit = (event: any) => {\n    event.preventDefault();\n    fetch(`http://localhost:3000/user/register`, {\n      method: 'POST',\n      body: JSON.stringify({\n        user: {\n          firstName: this.props.firstName,\n          lastName: this.props.lastName,\n          username: this.props.username,\n          zipCode: this.props.zipCode,\n          email: this.props.email,\n          password: this.props.password\n        }\n      }),\n      headers: new Headers({\n        'Content-Type': 'application/json'\n      })\n    })\n      .then((response) => {\n        if (response.status === 200) {\n          console.log(\"Registration successful.\");\n        } else {\n          console.log(\"Registration failed.\");\n        }\n        return response.json();\n      })\n      .then((data) => {\n        this.props.updateToken(data.sessionToken);\n        this.setState({redirect: '/menu'})\n      })\n  }\n\n\n  render() {\n    if (this.state.redirect){\n      return <Redirect to = {this.state.redirect} />\n    }\n    return (\n      <Container>\n        <h4 className=\"registerHeader\">Register</h4>\n        <Form className=\"register\" onSubmit={this.handleSubmit}>\n          <FormGroup>\n            <Input\n              className=\"firstName\"\n              placeholder=\"First Name\"\n              onChange={(e) =>\n                this.props.setFirstName(e.target.value)}\n              value={this.props.firstName} />\n          </FormGroup>\n          <FormGroup>\n            <Input\n              className=\"lastName\"\n              placeholder=\"Last Name\"\n              onChange={(e) =>\n                this.props.setLastName(e.target.value)}\n              value={this.props.lastName} />\n          </FormGroup>\n          <FormGroup>\n            <Input\n              className=\"username\"\n              placeholder=\"Username\"\n              onChange={(e) =>\n                this.props.setUsername(e.target.value)}\n              value={this.props.username} />\n          </FormGroup>\n          <FormGroup>\n            <Input\n              className=\"zipCode\"\n              placeholder=\"Zip Code\"\n              onChange={(e) =>\n                this.props.setZipCode(e.target.value)}\n              value={this.props.zipCode} />\n          </FormGroup>\n          <FormGroup>\n            <Input\n              className=\"email\"\n              placeholder=\"Email\"\n              onChange={(e) =>\n                this.props.setEmail(e.target.value)}\n              value={this.props.email} />\n          </FormGroup>\n          <FormGroup>\n            <Input\n              className=\"password\"\n              placeholder=\"Password\"\n              onChange={(e) =>\n                this.props.setPassword(e.target.value)}\n              value={this.props.password} />\n          </FormGroup>\n          <Button type=\"submit\">Register</Button>\n        </Form>\n      </Container>\n    );\n  }\n}\n\nexport default Register;","/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/home/Header.tsx",["79"],"import React, { Component } from 'react';\nimport { Button, Collapse, Navbar, NavbarToggler, Nav, NavItem, NavLink } from 'reactstrap';\n\n\ntype HeaderProps = {\n    clearToken: any;\n}\n\ntype HeaderStates = {\n    isOpen: boolean;\n}\n\nclass Header extends React.Component<HeaderProps, HeaderStates> {\n    constructor(props: HeaderProps) {\n        super(props);\n        this.toggle = this.toggle.bind(this);\n        this.state = {\n            isOpen: false,\n        };\n    }\n    toggle() {\n        this.setState({\n            isOpen: !this.state.isOpen\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <Navbar className=\"navbar\">\n                    <NavbarToggler className=\"mr-2\" id=\"hamburger\" right onClick={this.toggle} />\n                    <Collapse isOpen={this.state.isOpen} navbar>\n                        <Nav navbar>\n                            <NavItem>\n                                <NavLink href=\"/\" >Helper Posts</NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink href=\"\">Request Posts</NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink href=\"\">Link</NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <Button onClick={this.props.clearToken}>Logout</Button>\n                            </NavItem>\n                        </Nav>\n                    </Collapse>\n                </Navbar>\n            </div>\n        )\n    }\n}\nexport default Header;","/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/home/DoorsImages.tsx",["80"],"import React, { Component } from 'react';\nimport Carousel, { autoplayPlugin } from '@brainhubeu/react-carousel';\nimport '@brainhubeu/react-carousel/lib/style.css';\n\nimport doors1 from '../../assets/doors1.jpg';\nimport doors2 from '../../assets/doors2.jpg';\nimport doors3 from '../../assets/doors3.jpg';\nimport doors4 from '../../assets/doors4.jpg';\nimport doors5 from '../../assets/doors5.jpg';\nimport doors6 from '../../assets/doors6.jpg';\nimport doors7 from '../../assets/doors7.jpg';\nimport doors8 from '../../assets/doors8.jpg';\nimport doors9 from '../../assets/doors9.jpg';\nimport doors10 from '../../assets/doors10.jpg';\n\nclass DoorsImages extends React.Component {\n\n    render() {\n        return (\n            <Carousel\n                plugins={[\n                    'centered',\n                    {\n                        resolve: autoplayPlugin,\n                        options: {\n                            interval: 2000,\n                        }\n                    },\n                ]}\n                animationSpeed={500}\n            >\n                <img src={doors1} className='doors' width='100%' alt=''/>\n                <img src={doors2} className='doors' width='100%' alt=''/>\n                <img src={doors3} className='doors' width='100%' alt=''/>\n                <img src={doors4} className='doors' width='100%' alt=''/>\n                <img src={doors5} className='doors' width='100%' alt=''/>\n                <img src={doors6} className='doors' width='100%' alt=''/>\n                <img src={doors7} className='doors' width='100%' alt=''/>\n                <img src={doors8} className='doors' width='100%' alt=''/>\n                <img src={doors9} className='doors' width='100%' alt=''/>\n                <img src={doors10} className='doors' width='100%' alt=''/>\n            </Carousel>\n        )\n    }\n}\n\nexport default DoorsImages;","/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/home/Footer.tsx",[],"/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/volunteers/CreateHelpPost.tsx",["81"],"import React, { Component } from 'react';\nimport { Button, Container, Form, FormGroup, Input, Label } from 'reactstrap';\n\ntype HelpProps = {\n    title: string;\n    description: string;\n    availability: string;\n    instances: number;\n    date: string;\n    inactiveDate: string;\n    setTitle: (e: any) => any;\n    setDescription: (e: any) => any;\n    setAvailability: (e: any) => any;\n    setInstances: (e: any) => any;\n    setDate: (e: any) => any;\n    setInactiveDate: (e: any) => any;\n    sessionToken?: any;\n}\n\ntype HelpState = {\n    title: string;\n    description: string;\n    availability: string;\n    instances: number;\n    date: any;\n    inactiveDate: any;\n}\n\nclass CreateHelpPost extends React.Component<HelpProps, HelpState> {\n    constructor(props: HelpProps) {\n        super(props);\n        this.state = {\n            title: \"\",\n            description: \"\",\n            availability: \"\",\n            instances: 0,\n            date: \"\",\n            inactiveDate: \"\",\n        }\n    }\n\n    handleSubmit = (event: any) => {\n        event.preventDefault();\n        fetch(`http://localhost:3000/help/create`, {\n            method: 'POST',\n            body: JSON.stringify({\n                help: {\n                    title: this.props.title, // Dropdown menu\n                    description: this.props.description,\n                    availability: this.props.availability, // Check boxes\n                    instances: this.props.instances,\n                    date: this.props.date, // Auto populate\n                    inactiveDate: this.props.inactiveDate,\n                }\n            }),\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': this.props.sessionToken\n            })\n        })\n            .then((response) => response.json())\n            .then((data) => {\n                console.log(data);\n                this.props.setTitle('');\n                this.props.setDescription('');\n                this.props.setAvailability('');\n                this.props.setInstances('');\n                this.props.setDate('');\n                this.props.setInactiveDate('');\n            })\n    }\n\n    render() {\n        return (\n            <Container>\n                <h4 className=\"registerHeader\">New Helper Post</h4>\n\n                <Form className=\"register\" onSubmit={this.handleSubmit}>\n                    <FormGroup>\n                        <Input\n                            className=\"helpTitle\"\n                            type=\"select\"\n                            onChange={(e) => { this.setState({ title: e.target.value }) }}\n                            value={this.state.title}>\n                            <option value=\"\"></option>\n                            <option value=\"Rake Leaves\">Rake Leaves</option>\n                            <option value=\"Shovel Snow\">Shovel Snow</option>\n                            <option value=\"Take Out Trash\">Take Out Trash</option>\n                            <option value=\"Walk Dogs\">Walk Dogs</option>\n                        </Input>\n                        <Label htmlFor=\"title\" className=\"helpTitle\"></Label>\n                    </FormGroup>\n                    <FormGroup>\n                        <Input\n                            className=\"helpDescription\"\n                            type=\"textarea\"\n                            onChange={(e) => { this.setState({ description: e.target.value }) }}\n                            value={this.state.description}>\n                        </Input>\n                        <Label htmlFor=\"description\" className=\"helpDescription\">Description</Label>\n                    </FormGroup>\n                    <FormGroup>\n                        <Input\n                            className=\"instances\"\n                            onChange={(e) => { this.setState({ instances: 0 }) }}\n                            value={this.state.instances} />\n                        <Label htmlFor=\"instances\" className=\"instances\">Instances</Label>\n                    </FormGroup>\n                    <FormGroup>\n\n                    </FormGroup>\n                    <FormGroup>\n\n                    </FormGroup>\n                    <FormGroup>\n\n                    </FormGroup>\n                    <Button type=\"submit\">Submit Services Post</Button>\n                </Form>\n            </Container>\n        );\n    }\n}\n\nexport default CreateHelpPost;","/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/home/Menu.tsx",["82"],"/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/volunteers/ViewHelpPosts.tsx",["83"],"/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/recipients/CreateRequestPost.tsx",["84"],"import React, { Component } from 'react';\nimport { Button, Container, Form, FormGroup, Input, Label } from 'reactstrap';\n\ntype RequestProps = {\n    title: string;\n    description: string;\n    availability: string;\n    instances: number;\n    date: string;\n    inactiveDate: string;\n    setTitle: (e: any) => any;\n    setDescription: (e: any) => any;\n    setAvailability: (e: any) => any;\n    setInstances: (e: any) => any;\n    setDate: (e: any) => any;\n    setInactiveDate: (e: any) => any;\n    sessionToken?: any;\n}\n\ntype RequestState = {\n    title: string;\n    description: string;\n    availability: string;\n    instances: number;\n    date: any;\n    inactiveDate: any;\n}\n\n\nclass CreateRequestPost extends React.Component<RequestProps, RequestState> {\n    constructor(props: RequestProps) {\n        super(props);\n        this.state = {\n            title: \"\",\n            description: \"\",\n            availability: \"\",\n            instances: 0,\n            date: \" \",\n            inactiveDate: \" \",\n        }\n    }\n\n    handleSubmit = (event: any) => {\n        event.preventDefault();\n        fetch(`http://localhost:3000/recipient/create`, {\n            method: 'POST',\n            body: JSON.stringify({\n                recipient: {\n                    title: this.props.title, // Dropdown menu\n                    description: this.props.description,\n                    availability: this.props.availability, // Check boxes\n                    instances: this.props.instances,\n                    date: this.props.date, // Auto populate\n                    inactiveDate: this.props.inactiveDate,\n                }\n            }),\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': this.props.sessionToken\n            })\n        })\n            .then((response) => response.json())\n            .then((data) => {\n                console.log(data);\n                this.props.setTitle('');\n                this.props.setDescription('');\n                this.props.setAvailability('');\n                this.props.setInstances('');\n                this.props.setDate('');\n                this.props.setInactiveDate('');\n            })\n    }\n\n\n    render() {\n        return (\n            <Container>\n                <h4 className='registerHeader'>New Request Post</h4>\n\n                <Form className='register' onSubmit={this.handleSubmit}>\n                    <FormGroup>\n                        <Input\n                            className='helpTitle'\n                            type='select'\n                            onChange={(e) => { this.setState({ title: e.target.value }) }}\n                            value={this.state.title}>\n                            <option value=\"\"></option>\n                            <option value=\"Rake Leaves\">Rake Leaves</option>\n                            <option value=\"Shovel Snow\">Shovel Snow</option>\n                            <option value=\"Take Out Trash\">Take Out Trash</option>\n                            <option value=\"Walk Dogs\">Walk Dogs</option>\n                        </Input>\n                        <Label htmlFor=\"title\" className=\"helpTitle\"></Label>\n                    </FormGroup>\n                    <FormGroup>\n                        <Input\n                            className=\"helpDescription\"\n                            type=\"textarea\"\n                            onChange={(e) => { this.setState({ description: e.target.value }) }}\n                            value={this.state.description}>\n                        </Input>\n                        <Label htmlFor=\"description\" className=\"helpDescription\">Description</Label>\n                    </FormGroup>\n                    <FormGroup>\n                        <Input\n                            className=\"instances\"\n                            type=\"checkbox\"\n                            onChange={(e) => { this.setState({ instances: 0 }) }}\n                            value={this.state.instances} />\n                        <Label htmlFor=\"instances\" className=\"instances\">Instances</Label>\n                    </FormGroup>\n                    <FormGroup>\n\n                    </FormGroup>\n                    <FormGroup>\n\n                    </FormGroup>\n                    <FormGroup>\n\n                    </FormGroup>\n                    <Button type=\"submit\">Submit Request Post</Button>\n                </Form>\n           \n            </Container>\n        )\n    }\n}\n\nexport default CreateRequestPost;","/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/recipients/ViewRequestPosts.tsx",["85"],{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":1,"column":17,"nodeType":"92","messageId":"93","endLine":1,"endColumn":26},{"ruleId":"90","severity":1,"message":"91","line":1,"column":17,"nodeType":"92","messageId":"93","endLine":1,"endColumn":26},{"ruleId":"90","severity":1,"message":"91","line":1,"column":17,"nodeType":"92","messageId":"93","endLine":1,"endColumn":26},{"ruleId":"90","severity":1,"message":"91","line":1,"column":17,"nodeType":"92","messageId":"93","endLine":1,"endColumn":26},{"ruleId":"90","severity":1,"message":"91","line":1,"column":17,"nodeType":"92","messageId":"93","endLine":1,"endColumn":26},{"ruleId":"90","severity":1,"message":"91","line":1,"column":17,"nodeType":"92","messageId":"93","endLine":1,"endColumn":26},{"ruleId":"90","severity":1,"message":"91","line":1,"column":17,"nodeType":"92","messageId":"93","endLine":1,"endColumn":26},{"ruleId":"90","severity":1,"message":"91","line":1,"column":17,"nodeType":"92","messageId":"93","endLine":1,"endColumn":26},{"ruleId":"90","severity":1,"message":"91","line":1,"column":17,"nodeType":"92","messageId":"93","endLine":1,"endColumn":26},{"ruleId":"90","severity":1,"message":"91","line":1,"column":17,"nodeType":"92","messageId":"93","endLine":1,"endColumn":26},{"ruleId":"90","severity":1,"message":"91","line":1,"column":17,"nodeType":"92","messageId":"93","endLine":1,"endColumn":26},{"ruleId":"90","severity":1,"message":"91","line":1,"column":17,"nodeType":"92","messageId":"93","endLine":1,"endColumn":26},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"@typescript-eslint/no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]