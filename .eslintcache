[{"/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/index.tsx":"1","/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/reportWebVitals.ts":"2","/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/App.tsx":"3","/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/auth/Auth.tsx":"4","/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/auth/Login.tsx":"5","/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/auth/Register.tsx":"6","/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/home/Header.tsx":"7","/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/home/DoorsImages.tsx":"8","/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/home/Footer.tsx":"9","/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/volunteers/CreateHelpPost.tsx":"10","/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/home/Menu.tsx":"11","/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/volunteers/ViewHelpPosts.tsx":"12","/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/recipients/CreateRequestPost.tsx":"13","/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/recipients/ViewRequestPosts.tsx":"14","/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/forms/Availability.tsx":"15","/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/forms/CheckBox.tsx":"16","/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/home/HomePage.tsx":"17"},{"size":500,"mtime":1607786181611,"results":"18","hashOfConfig":"19"},{"size":425,"mtime":1607786181612,"results":"20","hashOfConfig":"19"},{"size":1691,"mtime":1611711609998,"results":"21","hashOfConfig":"19"},{"size":3143,"mtime":1611702102779,"results":"22","hashOfConfig":"19"},{"size":2253,"mtime":1611270953193,"results":"23","hashOfConfig":"19"},{"size":3634,"mtime":1611702048698,"results":"24","hashOfConfig":"19"},{"size":1727,"mtime":1611714191338,"results":"25","hashOfConfig":"19"},{"size":1866,"mtime":1611114981527,"results":"26","hashOfConfig":"19"},{"size":608,"mtime":1610502038650,"results":"27","hashOfConfig":"19"},{"size":5687,"mtime":1611714263675,"results":"28","hashOfConfig":"19"},{"size":4191,"mtime":1611712244418,"results":"29","hashOfConfig":"19"},{"size":3249,"mtime":1611707547164,"results":"30","hashOfConfig":"19"},{"size":5968,"mtime":1611714139420,"results":"31","hashOfConfig":"19"},{"size":3516,"mtime":1611714460937,"results":"32","hashOfConfig":"19"},{"size":2089,"mtime":1611703353157,"results":"33","hashOfConfig":"19"},{"size":390,"mtime":1611478574261,"results":"34","hashOfConfig":"19"},{"size":982,"mtime":1611713897870,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"ivhg93",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"38"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/index.tsx",[],["77","78"],"/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/reportWebVitals.ts",[],"/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/App.tsx",["79","80"],"/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/auth/Auth.tsx",["81","82"],"import React, { Component } from \"react\";\nimport { Button, Container, Row, Col } from 'reactstrap';\n\nimport Login from './Login';\nimport Register from './Register';\n\ntype AuthStates = {\n  email: string;\n  password: string;\n  firstName: string;\n  lastName: string;\n  username: string;\n  zipCode: number;\n  setEmail: (e: any) => any;\n  setPassword: (e: any) => any;\n  setFirstName: (e: any) => any;\n  setLastName: (e: any) => any;\n  setUsername: (e: any) => any;\n  setZipCode: (e: any) => any;\n  sessionToken: any;\n  updateToken: any;\n  getToken: any;\n  register: boolean;\n}\n\nclass Auth extends React.Component<{ updateToken: any }, AuthStates> {\n  constructor(props: any) {\n    super(props)\n    this.state = {\n      email: \"\",\n      password: \"\",\n      firstName: \"\",\n      lastName: \"\",\n      username: \"\",\n      zipCode: 0,\n      sessionToken: \"\",\n      getToken: \"\",\n      updateToken: \"\",\n      register: true,\n      setEmail: (e) => {\n        this.setState({\n          email: e\n        })\n      },\n      setPassword: (e) => {\n        this.setState({\n          password: e\n        })\n      },\n      setFirstName: (e) => {\n        this.setState({\n          firstName: e\n        })\n      },\n      setLastName: (e) => {\n        this.setState({\n          lastName: e\n        })\n      },\n      setUsername: (e) => {\n        this.setState({\n          username: e\n        })\n      },\n      setZipCode: (e) => {\n        this.setState({\n          zipCode: e\n        })\n      }\n    }\n  }\n\n\n  render() {\n    return (\n      <Container className=\"auth-container\">\n\n        {this.state.register ?\n          <Col md=\"6\">\n            <Login\n              email={this.state.email}\n              password={this.state.password}\n              setEmail={this.state.setEmail}\n              setPassword={this.state.setPassword}\n              sessionToken={this.state.sessionToken}\n              updateToken={this.props.updateToken}\n              getToken={this.state.getToken} />\n          </Col>\n          :\n          <Col md=\"6\">\n            <Register\n              firstName={this.state.firstName}\n              lastName={this.state.lastName}\n              email={this.state.email}\n              username={this.state.username}\n              zipCode={this.state.zipCode}\n              password={this.state.password}\n              setEmail={this.state.setEmail}\n              setPassword={this.state.setPassword}\n              setFirstName={this.state.setFirstName}\n              setLastName={this.state.setLastName}\n              setUsername={this.state.setUsername}\n              setZipCode={this.state.setZipCode}\n              sessionToken={this.state.sessionToken}\n              updateToken={this.props.updateToken}\n              getToken={this.state.getToken} />\n          </Col>\n        }\n        \n        <br />\n        <Button\n          onClick={() => {\n            this.setState({\n              register: !this.state.register\n            })\n          }}>{this.state.register ?\n            \"Need a login? Click here.\"\n            :\n            \"Already have a login? Click here.\"}\n        </Button>\n\n      </Container>\n    );\n  }\n}\n\nexport default Auth;","/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/auth/Login.tsx",["83"],"import React, { Component } from \"react\";\nimport { Form, FormGroup, Input, Button } from 'reactstrap';\nimport {Redirect} from 'react-router-dom';\n\n\ntype LoginAcceptedProps = {\n  email: string;\n  password: string;\n  setEmail: (e: any) => any;\n  setPassword: (e: any) => any;\n  sessionToken: any;\n  updateToken: any;\n  getToken: any;\n}\n\nclass Login extends React.Component<LoginAcceptedProps, {redirect: null | string}> {\n  constructor(props: LoginAcceptedProps) {\n    super(props)\n    this.state = {\n      redirect: null\n    }\n  }\n\n  handleSubmit = (event: any) => {\n    event.preventDefault();\n    fetch(`http://localhost:3000/user/login`, {\n      method: 'POST',\n      body: JSON.stringify({\n        user: {\n          email: this.props.email,\n          password: this.props.password\n        }\n      }),\n      headers: new Headers({\n        'Content-Type': 'application/json'\n      })\n    })\n      .then((response) => {\n        if (response.status === 200) {\n          console.log(\"Login successful.\");\n        } else {\n          console.log(\"Login failed.\");\n        }\n        return response.json();\n      })\n      .then((data) => {\n        this.props.updateToken(data.sessionToken);\n        this.setState({redirect: '/menu'})\n      })\n  }\n\n  render() {\n    if (this.state.redirect){\n      return <Redirect to = {this.state.redirect} />\n    }\n    return (\n      <div>\n        <h4 className=\"loginHeader\">Login</h4>\n        <Form className=\"login\" onSubmit={this.handleSubmit}>\n          <FormGroup>\n            <div className=\"input-group mb-3\">\n              <Input\n                className=\"email\"\n                name=\"email\"\n                placeholder=\"Email\"\n                onChange={(e) =>\n                  this.props.setEmail(e.target.value)}\n                value={this.props.email} />\n            </div>\n          </FormGroup>\n          <FormGroup>\n            <Input\n              className=\"password\"\n              name=\"password\"\n              placeholder=\"Password\"\n              onChange={(e) =>\n                this.props.setPassword(e.target.value)}\n              value={this.props.password} />\n          </FormGroup>\n          <Button type=\"submit\">Login</Button>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default (Login);","/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/auth/Register.tsx",["84"],"import React, { Component } from 'react';\nimport { Container, Form, FormGroup, Input, Button } from 'reactstrap';\nimport { Redirect } from 'react-router-dom';\n\ntype RegisterAcceptedProps = {\n  email: string;\n  password: string;\n  firstName: string;\n  lastName: string;\n  username: string;\n  zipCode: number;\n  setEmail: (e: any) => any;\n  setPassword: (e: any) => any;\n  setFirstName: (e: any) => any;\n  setLastName: (e: any) => any;\n  setUsername: (e: any) => any;\n  setZipCode: (e: any) => any;\n  sessionToken: any;\n  updateToken: any;\n  getToken: any;\n}\n\n\nclass Register extends React.Component<RegisterAcceptedProps, { redirect: null | string }> {\n  constructor(props: RegisterAcceptedProps) {\n    super(props)\n    this.state = {\n      redirect: null\n    }\n  }\n\n  handleSubmit = (event: any) => {\n    event.preventDefault();\n    fetch(`http://localhost:3000/user/register`, {\n      method: 'POST',\n      body: JSON.stringify({\n        user: {\n          firstName: this.props.firstName,\n          lastName: this.props.lastName,\n          username: this.props.username,\n          zipCode: this.props.zipCode,\n          email: this.props.email,\n          password: this.props.password\n        }\n      }),\n      headers: new Headers({\n        'Content-Type': 'application/json'\n      })\n    })\n      .then((response) => {\n        if (response.status === 200) {\n          console.log(\"Registration successful.\");\n        } else {\n          console.log(\"Registration failed.\");\n        }\n        return response.json();\n      })\n      .then((data) => {\n        this.props.updateToken(data.sessionToken);\n        this.setState({ redirect: '/menu' })\n      })\n  }\n\n\n  render() {\n    if (this.state.redirect) {\n      return <Redirect to={this.state.redirect} />\n    }\n    return (\n      <Container>\n        <h4 className=\"registerHeader\">Register</h4>\n        <Form className=\"register\" onSubmit={this.handleSubmit}>\n          <FormGroup>\n            <Input\n              className=\"firstName\"\n              placeholder=\"First Name\"\n              onChange={(e) =>\n                this.props.setFirstName(e.target.value)}\n              value={this.props.firstName} />\n          </FormGroup>\n          <FormGroup>\n            <Input\n              className=\"lastName\"\n              placeholder=\"Last Name\"\n              onChange={(e) =>\n                this.props.setLastName(e.target.value)}\n              value={this.props.lastName} />\n          </FormGroup>\n          <FormGroup>\n            <Input\n              className=\"username\"\n              placeholder=\"Username\"\n              onChange={(e) =>\n                this.props.setUsername(e.target.value)}\n              value={this.props.username} />\n          </FormGroup>\n          <FormGroup>\n            <Input\n              className=\"zipCode\"\n              placeholder=\"Zip Code\"\n              onChange={(e) =>\n                this.props.setZipCode(e.target.value)}\n              value={this.props.zipCode} />\n          </FormGroup>\n          <FormGroup>\n            <Input\n              className=\"email\"\n              placeholder=\"Email\"\n              onChange={(e) =>\n                this.props.setEmail(e.target.value)}\n              value={this.props.email} />\n          </FormGroup>\n          <FormGroup>\n            <Input\n              className=\"password\"\n              placeholder=\"Password\"\n              onChange={(e) =>\n                this.props.setPassword(e.target.value)}\n              value={this.props.password} />\n          </FormGroup>\n          <Button type=\"submit\">Register</Button>\n        </Form>\n      </Container>\n    );\n  }\n}\n\nexport default Register;","/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/home/Header.tsx",["85","86"],"/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/home/DoorsImages.tsx",["87"],"import React, { Component } from 'react';\nimport Carousel, { autoplayPlugin } from '@brainhubeu/react-carousel';\nimport '@brainhubeu/react-carousel/lib/style.css';\n\nimport doors1 from '../../assets/doors1.jpg';\nimport doors2 from '../../assets/doors2.jpg';\nimport doors3 from '../../assets/doors3.jpg';\nimport doors4 from '../../assets/doors4.jpg';\nimport doors5 from '../../assets/doors5.jpg';\nimport doors6 from '../../assets/doors6.jpg';\nimport doors7 from '../../assets/doors7.jpg';\nimport doors8 from '../../assets/doors8.jpg';\nimport doors9 from '../../assets/doors9.jpg';\nimport doors10 from '../../assets/doors10.jpg';\n\nclass DoorsImages extends React.Component {\n\n    render() {\n        return (\n            <Carousel\n                plugins={[\n                    'centered',\n                    {\n                        resolve: autoplayPlugin,\n                        options: {\n                            interval: 2000,\n                        }\n                    },\n                ]}\n                animationSpeed={500}\n            >\n                <img src={doors1} className='doors' width='100%' alt=''/>\n                <img src={doors2} className='doors' width='100%' alt=''/>\n                <img src={doors3} className='doors' width='100%' alt=''/>\n                <img src={doors4} className='doors' width='100%' alt=''/>\n                <img src={doors5} className='doors' width='100%' alt=''/>\n                <img src={doors6} className='doors' width='100%' alt=''/>\n                <img src={doors7} className='doors' width='100%' alt=''/>\n                <img src={doors8} className='doors' width='100%' alt=''/>\n                <img src={doors9} className='doors' width='100%' alt=''/>\n                <img src={doors10} className='doors' width='100%' alt=''/>\n            </Carousel>\n        )\n    }\n}\n\nexport default DoorsImages;","/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/home/Footer.tsx",[],"/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/volunteers/CreateHelpPost.tsx",["88","89"],"/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/home/Menu.tsx",["90"],"/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/volunteers/ViewHelpPosts.tsx",["91"],"import React, { Component } from 'react';\nimport { Button, Card, CardHeader, CardTitle, CardText, Container } from 'reactstrap';\n\ntype ViewHelpPostsProps = {\n    sessionToken?: any;\n}\n\ntype ViewHelpPostsState = {\n    helpPosts: any;\n}\n\n\nclass ViewHelpPosts extends React.Component<ViewHelpPostsProps, ViewHelpPostsState> {\n    constructor(props: ViewHelpPostsProps) {\n        super(props)\n        this.fetchHelpPosts = this.fetchHelpPosts.bind(this)\n        this.state = {\n            helpPosts: [],\n        }\n    }\n\n    setHelpPosts = (postArray: any) => {\n        console.log(\"postArray: \", postArray)\n        this.setState({helpPosts: postArray})\n    }\n\n    fetchHelpPosts = () => {\n     fetch(`http://localhost:3000/help`, {\n            method: 'GET',\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': this.props.sessionToken\n            })\n        })\n          .then(response => response.json())\n            .then((data) => {\n                this.setHelpPosts(data)\n            }) \n    }\n\n    componentDidMount() {\n        this.fetchHelpPosts();\n    }\n\n\n    render() {\n        return (\n            <div>\n                <p>This is the Volunteer Posts Page</p>\n                <div>\n                    {this.state.helpPosts.length > 0 ? (this.state.helpPosts.map((event: any, index: any) => (\n                        <Container key={this.state.helpPosts.id} className=\"serviceCard\">\n                            <Card body inverse style={{ backgroundColor: '#CECECE', borderColor: '#525252', borderWidth: '.25em' }}>\n                                <CardHeader tag=\"h4\">\n                                    Service Available:\n                                    <br />\n                                    {this.state.helpPosts[index].title}\n                                </CardHeader>\n                                <CardTitle>\n                                    {this.state.helpPosts[index].user.username}\n                                </CardTitle>\n                                <CardText>\n                                    posted on\n                                    {this.state.helpPosts[index].date}\n                                </CardText>\n                                <CardText>\n                                    Description:\n                                    {this.state.helpPosts[index].description}\n                                </CardText>\n                                <CardText >\n                                    Availability:\n                                    {this.state.helpPosts[index].availability}\n                                </CardText>\n                                <CardText >\n                                    Instances:\n                                    {this.state.helpPosts[index].instances}\n                                </CardText>\n                                <Button >Claim Service</Button>\n                            </Card>\n                        </Container>\n                    ))\n                    ) : (\n                            <div>\n\n                            </div>\n                        )}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ViewHelpPosts;","/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/recipients/CreateRequestPost.tsx",["92","93"],"/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/recipients/ViewRequestPosts.tsx",["94"],"/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/forms/Availability.tsx",["95"],"import React, { Component } from 'react'\nimport { Input } from 'reactstrap';\n\nimport CheckBox from './CheckBox';\n\ntype AvailabilityStates = {\n    availability: any;\n}\n\nclass Availability extends React.Component<{}, AvailabilityStates> {\n    constructor(props: any) {\n        super(props)\n        this.state = {\n            availability: [\n                { id: 1, value: \"Sundays\", isChecked: false },\n                { id: 2, value: \"Mondays\", isChecked: false },\n                { id: 3, value: \"Tuesdays\", isChecked: false },\n                { id: 4, value: \"Wednesdays\", isChecked: false },\n                { id: 5, value: \"Thursdays\", isChecked: false },\n                { id: 6, value: \"Fridays\", isChecked: false },\n                { id: 7, value: \"Saturday\", isChecked: false }\n            ]\n        }\n    }\n\n    handleAllChecked = (event: any) => {\n        let availability = this.state.availability\n\n        availability.forEach((availability: any) => \n            availability.isChecked = event.target.checked)\n\n        this.setState({ availability: availability })\n    }\n\n    handleCheckChildElement = (event: any) => {\n        let availability = this.state.availability\n\n        availability.forEach((availability: any) => {\n            if (availability.value === event.target.value)\n                availability.isChecked = event.target.checked\n        })\n\n        this.setState({ availability: availability })\n    }\n\n    render() {\n        return (\n            <div>\n                <Input\n                    type=\"checkbox\"\n                    className=\"checkbox\"\n                    onChange={this.handleAllChecked}\n                    value=\"checkedall\"/>\n                    Check / Uncheck All\n                <ul>\n                    {this.state.availability.map((availability: any, index: any) => {\n                        return (<CheckBox key={index} handleCheckChildElement={this.handleCheckChildElement}  {...availability} />)\n                    })\n                    }\n                </ul>\n            </div>\n        );\n    }\n}\n\nexport default Availability;","/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/forms/CheckBox.tsx",[],"/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/home/HomePage.tsx",["96","97"],{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":1,"column":17,"nodeType":"104","messageId":"105","endLine":1,"endColumn":26},{"ruleId":"102","severity":1,"message":"106","line":9,"column":8,"nodeType":"104","messageId":"105","endLine":9,"endColumn":12},{"ruleId":"102","severity":1,"message":"103","line":1,"column":17,"nodeType":"104","messageId":"105","endLine":1,"endColumn":26},{"ruleId":"102","severity":1,"message":"107","line":2,"column":29,"nodeType":"104","messageId":"105","endLine":2,"endColumn":32},{"ruleId":"102","severity":1,"message":"103","line":1,"column":17,"nodeType":"104","messageId":"105","endLine":1,"endColumn":26},{"ruleId":"102","severity":1,"message":"103","line":1,"column":17,"nodeType":"104","messageId":"105","endLine":1,"endColumn":26},{"ruleId":"102","severity":1,"message":"103","line":1,"column":17,"nodeType":"104","messageId":"105","endLine":1,"endColumn":26},{"ruleId":"102","severity":1,"message":"108","line":2,"column":10,"nodeType":"104","messageId":"105","endLine":2,"endColumn":18},{"ruleId":"102","severity":1,"message":"103","line":1,"column":17,"nodeType":"104","messageId":"105","endLine":1,"endColumn":26},{"ruleId":"102","severity":1,"message":"103","line":1,"column":17,"nodeType":"104","messageId":"105","endLine":1,"endColumn":26},{"ruleId":"109","severity":1,"message":"110","line":32,"column":5,"nodeType":"111","messageId":"112","endLine":34,"endColumn":6},{"ruleId":"102","severity":1,"message":"103","line":1,"column":17,"nodeType":"104","messageId":"105","endLine":1,"endColumn":26},{"ruleId":"102","severity":1,"message":"103","line":1,"column":17,"nodeType":"104","messageId":"105","endLine":1,"endColumn":26},{"ruleId":"102","severity":1,"message":"103","line":1,"column":17,"nodeType":"104","messageId":"105","endLine":1,"endColumn":26},{"ruleId":"109","severity":1,"message":"110","line":34,"column":5,"nodeType":"111","messageId":"112","endLine":36,"endColumn":6},{"ruleId":"102","severity":1,"message":"103","line":1,"column":17,"nodeType":"104","messageId":"105","endLine":1,"endColumn":26},{"ruleId":"102","severity":1,"message":"103","line":1,"column":17,"nodeType":"104","messageId":"105","endLine":1,"endColumn":26},{"ruleId":"102","severity":1,"message":"103","line":1,"column":17,"nodeType":"104","messageId":"105","endLine":1,"endColumn":26},{"ruleId":"109","severity":1,"message":"110","line":9,"column":3,"nodeType":"111","messageId":"112","endLine":11,"endColumn":4},"no-native-reassign",["113"],"no-negated-in-lhs",["114"],"@typescript-eslint/no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'Auth' is defined but never used.","'Row' is defined but never used.","'Redirect' is defined but never used.","@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-global-assign","no-unsafe-negation"]