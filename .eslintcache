[{"/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/index.tsx":"1","/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/reportWebVitals.ts":"2","/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/App.tsx":"3","/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/auth/Auth.tsx":"4","/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/auth/Login.tsx":"5","/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/auth/Register.tsx":"6","/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/home/Header.tsx":"7","/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/home/DoorsImages.tsx":"8","/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/home/Footer.tsx":"9","/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/volunteers/CreateHelpPost.tsx":"10","/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/home/Menu.tsx":"11","/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/volunteers/ViewHelpPosts.tsx":"12","/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/recipients/CreateRequestPost.tsx":"13","/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/recipients/ViewRequestPosts.tsx":"14","/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/forms/Availability.tsx":"15","/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/forms/CheckBox.tsx":"16","/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/home/HomePage.tsx":"17"},{"size":500,"mtime":1607786181611,"results":"18","hashOfConfig":"19"},{"size":425,"mtime":1607786181612,"results":"20","hashOfConfig":"19"},{"size":1663,"mtime":1611546787305,"results":"21","hashOfConfig":"19"},{"size":3170,"mtime":1611545891653,"results":"22","hashOfConfig":"19"},{"size":2253,"mtime":1611270953193,"results":"23","hashOfConfig":"19"},{"size":3629,"mtime":1611271082734,"results":"24","hashOfConfig":"19"},{"size":1613,"mtime":1611536611352,"results":"25","hashOfConfig":"19"},{"size":1866,"mtime":1611114981527,"results":"26","hashOfConfig":"19"},{"size":608,"mtime":1610502038650,"results":"27","hashOfConfig":"19"},{"size":4856,"mtime":1611478324833,"results":"28","hashOfConfig":"19"},{"size":4248,"mtime":1611539711850,"results":"29","hashOfConfig":"19"},{"size":3248,"mtime":1611474963550,"results":"30","hashOfConfig":"19"},{"size":4509,"mtime":1611471014314,"results":"31","hashOfConfig":"19"},{"size":3445,"mtime":1611474944088,"results":"32","hashOfConfig":"19"},{"size":2084,"mtime":1611478411785,"results":"33","hashOfConfig":"19"},{"size":390,"mtime":1611478574261,"results":"34","hashOfConfig":"19"},{"size":1165,"mtime":1611546794754,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"ivhg93",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"38"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"38"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/index.tsx",[],["82","83"],"/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/reportWebVitals.ts",[],"/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/App.tsx",["84","85"],"/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/auth/Auth.tsx",["86","87"],"import React, { Component } from \"react\";\nimport { Button, Container, Row, Col } from 'reactstrap';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport Login from './Login';\nimport Register from './Register';\n\ntype AuthStates = {\n  email: string;\n  password: string;\n  firstName: string;\n  lastName: string;\n  username: string;\n  zipCode: number;\n  setEmail: (e: any) => any;\n  setPassword: (e: any) => any;\n  setFirstName: (e: any) => any;\n  setLastName: (e: any) => any;\n  setUsername: (e: any) => any;\n  setZipCode: (e: any) => any;\n  sessionToken: any;\n  updateToken: any;\n  getToken: any;\n}\n\nclass Auth extends React.Component<{updateToken: any}, AuthStates> {\n  constructor(props: any) {\n    super(props)\n    this.state = {\n      email: \"\",\n      password: \"\",\n      firstName: \"\",\n      lastName: \"\",\n      username: \"\",\n      zipCode: 0,\n      sessionToken: \"\",\n      getToken: \"\",\n      updateToken: \"\",\n      setEmail: (e) => {\n        this.setState({\n          email: e\n        })\n      },\n      setPassword: (e) => {\n        this.setState({\n          password: e\n        })\n      },\n      setFirstName: (e) => {\n        this.setState({\n          firstName: e\n        })\n      },\n      setLastName: (e) => {\n        this.setState({\n          lastName: e\n        })\n      },\n      setUsername: (e) => {\n        this.setState({\n          username: e\n        })\n      },\n      setZipCode: (e) => {\n        this.setState({\n          zipCode: e\n        })\n      }\n    }\n  }\n\n\n  render() {\n    return (\n      <Container className=\"auth-container\">\n        <Row>\n          <Col md=\"6\">\n\n            <Router>\n                \n                <Route exact path=\"/user/login\">\n                  <Login\n                    email={this.state.email}\n                    password={this.state.password}\n                    setEmail={this.state.setEmail}\n                    setPassword={this.state.setPassword}\n                    sessionToken={this.state.sessionToken}\n                    updateToken={this.props.updateToken}\n                    getToken={this.state.getToken} />\n                </Route>\n                \n                <Route path=\"/user/register\">\n                  <Register\n                    firstName={this.state.firstName}\n                    lastName={this.state.lastName}\n                    email={this.state.email}\n                    username={this.state.username}\n                    zipCode={this.state.zipCode}\n                    password={this.state.password}\n                    setEmail={this.state.setEmail}\n                    setPassword={this.state.setPassword}\n                    setFirstName={this.state.setFirstName}\n                    setLastName={this.state.setLastName}\n                    setUsername={this.state.setUsername}\n                    setZipCode={this.state.setZipCode}\n                    sessionToken={this.state.sessionToken}\n                    updateToken={this.props.updateToken}\n                    getToken={this.state.getToken} />\n                </Route>\n              \n            </Router>\n\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default Auth;","/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/auth/Login.tsx",["88"],"import React, { Component } from \"react\";\nimport { Form, FormGroup, Input, Button } from 'reactstrap';\nimport {Redirect} from 'react-router-dom';\n\n\ntype LoginAcceptedProps = {\n  email: string;\n  password: string;\n  setEmail: (e: any) => any;\n  setPassword: (e: any) => any;\n  sessionToken: any;\n  updateToken: any;\n  getToken: any;\n}\n\nclass Login extends React.Component<LoginAcceptedProps, {redirect: null | string}> {\n  constructor(props: LoginAcceptedProps) {\n    super(props)\n    this.state = {\n      redirect: null\n    }\n  }\n\n  handleSubmit = (event: any) => {\n    event.preventDefault();\n    fetch(`http://localhost:3000/user/login`, {\n      method: 'POST',\n      body: JSON.stringify({\n        user: {\n          email: this.props.email,\n          password: this.props.password\n        }\n      }),\n      headers: new Headers({\n        'Content-Type': 'application/json'\n      })\n    })\n      .then((response) => {\n        if (response.status === 200) {\n          console.log(\"Login successful.\");\n        } else {\n          console.log(\"Login failed.\");\n        }\n        return response.json();\n      })\n      .then((data) => {\n        this.props.updateToken(data.sessionToken);\n        this.setState({redirect: '/menu'})\n      })\n  }\n\n  render() {\n    if (this.state.redirect){\n      return <Redirect to = {this.state.redirect} />\n    }\n    return (\n      <div>\n        <h4 className=\"loginHeader\">Login</h4>\n        <Form className=\"login\" onSubmit={this.handleSubmit}>\n          <FormGroup>\n            <div className=\"input-group mb-3\">\n              <Input\n                className=\"email\"\n                name=\"email\"\n                placeholder=\"Email\"\n                onChange={(e) =>\n                  this.props.setEmail(e.target.value)}\n                value={this.props.email} />\n            </div>\n          </FormGroup>\n          <FormGroup>\n            <Input\n              className=\"password\"\n              name=\"password\"\n              placeholder=\"Password\"\n              onChange={(e) =>\n                this.props.setPassword(e.target.value)}\n              value={this.props.password} />\n          </FormGroup>\n          <Button type=\"submit\">Login</Button>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default (Login);","/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/auth/Register.tsx",["89"],"import React, { Component } from 'react';\nimport { Container, Form, FormGroup, Input, Button } from 'reactstrap';\nimport {Redirect} from 'react-router-dom';\n\ntype RegisterAcceptedProps = {\n  email: string;\n  password: string;\n  firstName: string;\n  lastName: string;\n  username: string;\n  zipCode: number;\n  setEmail: (e: any) => any;\n  setPassword: (e: any) => any;\n  setFirstName: (e: any) => any;\n  setLastName: (e: any) => any;\n  setUsername: (e: any) => any;\n  setZipCode: (e: any) => any;\n  sessionToken: any;\n  updateToken: any;\n  getToken: any;\n}\n\n\nclass Register extends React.Component<RegisterAcceptedProps, {redirect: null | string}> {\n  constructor(props: RegisterAcceptedProps) {\n    super(props)\n    this.state = {\n      redirect: null\n    }\n  }\n\n  handleSubmit = (event: any) => {\n    event.preventDefault();\n    fetch(`http://localhost:3000/user/register`, {\n      method: 'POST',\n      body: JSON.stringify({\n        user: {\n          firstName: this.props.firstName,\n          lastName: this.props.lastName,\n          username: this.props.username,\n          zipCode: this.props.zipCode,\n          email: this.props.email,\n          password: this.props.password\n        }\n      }),\n      headers: new Headers({\n        'Content-Type': 'application/json'\n      })\n    })\n      .then((response) => {\n        if (response.status === 200) {\n          console.log(\"Registration successful.\");\n        } else {\n          console.log(\"Registration failed.\");\n        }\n        return response.json();\n      })\n      .then((data) => {\n        this.props.updateToken(data.sessionToken);\n        this.setState({redirect: '/menu'})\n      })\n  }\n\n\n  render() {\n    if (this.state.redirect){\n      return <Redirect to = {this.state.redirect} />\n    }\n    return (\n      <Container>\n        <h4 className=\"registerHeader\">Register</h4>\n        <Form className=\"register\" onSubmit={this.handleSubmit}>\n          <FormGroup>\n            <Input\n              className=\"firstName\"\n              placeholder=\"First Name\"\n              onChange={(e) =>\n                this.props.setFirstName(e.target.value)}\n              value={this.props.firstName} />\n          </FormGroup>\n          <FormGroup>\n            <Input\n              className=\"lastName\"\n              placeholder=\"Last Name\"\n              onChange={(e) =>\n                this.props.setLastName(e.target.value)}\n              value={this.props.lastName} />\n          </FormGroup>\n          <FormGroup>\n            <Input\n              className=\"username\"\n              placeholder=\"Username\"\n              onChange={(e) =>\n                this.props.setUsername(e.target.value)}\n              value={this.props.username} />\n          </FormGroup>\n          <FormGroup>\n            <Input\n              className=\"zipCode\"\n              placeholder=\"Zip Code\"\n              onChange={(e) =>\n                this.props.setZipCode(e.target.value)}\n              value={this.props.zipCode} />\n          </FormGroup>\n          <FormGroup>\n            <Input\n              className=\"email\"\n              placeholder=\"Email\"\n              onChange={(e) =>\n                this.props.setEmail(e.target.value)}\n              value={this.props.email} />\n          </FormGroup>\n          <FormGroup>\n            <Input\n              className=\"password\"\n              placeholder=\"Password\"\n              onChange={(e) =>\n                this.props.setPassword(e.target.value)}\n              value={this.props.password} />\n          </FormGroup>\n          <Button type=\"submit\">Register</Button>\n        </Form>\n      </Container>\n    );\n  }\n}\n\nexport default Register;","/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/home/Header.tsx",["90"],"import React, { Component } from 'react';\nimport { Button, Collapse, Navbar, NavbarToggler, Nav, NavItem, NavLink } from 'reactstrap';\n\n\ntype HeaderProps = {\n    clearToken: any;\n}\n\ntype HeaderStates = {\n    isOpen: boolean;\n}\n\nclass Header extends React.Component<HeaderProps, HeaderStates> {\n    constructor(props: HeaderProps) {\n        super(props);\n        this.toggle = this.toggle.bind(this);\n        this.state = {\n            isOpen: false,\n        };\n    }\n    toggle() {\n        this.setState({\n            isOpen: !this.state.isOpen\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <Navbar className=\"navbar\">\n                    <NavbarToggler className=\"mr-2\" id=\"hamburger\" right onClick={this.toggle} />\n                    <Collapse isOpen={this.state.isOpen} navbar>\n                        <Nav navbar>\n                            <NavItem>\n                                <NavLink href=\"/\" >Helper Posts</NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink href=\"\">Request Posts</NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink href=\"\">Link</NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <Button onClick={this.props.clearToken}>Logout</Button>\n                            </NavItem>\n                        </Nav>\n                    </Collapse>\n                </Navbar>\n            </div>\n        )\n    }\n}\nexport default Header;","/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/home/DoorsImages.tsx",["91"],"import React, { Component } from 'react';\nimport Carousel, { autoplayPlugin } from '@brainhubeu/react-carousel';\nimport '@brainhubeu/react-carousel/lib/style.css';\n\nimport doors1 from '../../assets/doors1.jpg';\nimport doors2 from '../../assets/doors2.jpg';\nimport doors3 from '../../assets/doors3.jpg';\nimport doors4 from '../../assets/doors4.jpg';\nimport doors5 from '../../assets/doors5.jpg';\nimport doors6 from '../../assets/doors6.jpg';\nimport doors7 from '../../assets/doors7.jpg';\nimport doors8 from '../../assets/doors8.jpg';\nimport doors9 from '../../assets/doors9.jpg';\nimport doors10 from '../../assets/doors10.jpg';\n\nclass DoorsImages extends React.Component {\n\n    render() {\n        return (\n            <Carousel\n                plugins={[\n                    'centered',\n                    {\n                        resolve: autoplayPlugin,\n                        options: {\n                            interval: 2000,\n                        }\n                    },\n                ]}\n                animationSpeed={500}\n            >\n                <img src={doors1} className='doors' width='100%' alt=''/>\n                <img src={doors2} className='doors' width='100%' alt=''/>\n                <img src={doors3} className='doors' width='100%' alt=''/>\n                <img src={doors4} className='doors' width='100%' alt=''/>\n                <img src={doors5} className='doors' width='100%' alt=''/>\n                <img src={doors6} className='doors' width='100%' alt=''/>\n                <img src={doors7} className='doors' width='100%' alt=''/>\n                <img src={doors8} className='doors' width='100%' alt=''/>\n                <img src={doors9} className='doors' width='100%' alt=''/>\n                <img src={doors10} className='doors' width='100%' alt=''/>\n            </Carousel>\n        )\n    }\n}\n\nexport default DoorsImages;","/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/home/Footer.tsx",[],"/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/volunteers/CreateHelpPost.tsx",["92"],"import React, { Component } from 'react';\nimport { Button, Container, Form, FormGroup, Input, Label } from 'reactstrap';\n\nimport Availability from '../forms/Availability';\n\ntype HelpProps = {\n    title: string;\n    description: string;\n    availability: string;\n    instances: number;\n    date: string;\n    inactiveDate: string;\n    setTitle: (e: any) => any;\n    setDescription: (e: any) => any;\n    setAvailability: (e: any) => any;\n    setInstances: (e: any) => any;\n    setDate: (e: any) => any;\n    setInactiveDate: (e: any) => any;\n    sessionToken?: any;\n}\n\ntype HelpState = {\n    title: string;\n    description: string;\n    availability: string;\n    instances: number;\n    date: any;\n    inactiveDate: any;\n}\n\nclass CreateHelpPost extends React.Component<HelpProps, HelpState> {\n    constructor(props: HelpProps) {\n        super(props);\n        this.state = {\n            title: \"\",\n            description: \"\",\n            availability: \"\",\n            instances: 0,\n            date: \"\",\n            inactiveDate: \"\",\n        }\n    }\n\n    handleSubmit = (event: any) => {\n        event.preventDefault();\n        fetch(`http://localhost:3000/help/create`, {\n            method: 'POST',\n            body: JSON.stringify({\n                help: {\n                    title: this.props.title, // Dropdown menu\n                    description: this.props.description,\n                    availability: this.props.availability, // Check boxes\n                    instances: this.props.instances,\n                    date: this.props.date, // Auto populate\n                    inactiveDate: this.props.inactiveDate,\n                }\n            }),\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': this.props.sessionToken\n            })\n        })\n            .then((response) => response.json())\n            .then((data) => {\n                console.log(data);\n                this.props.setTitle('');\n                this.props.setDescription('');\n                this.props.setAvailability('');\n                this.props.setInstances('');\n                this.props.setInactiveDate('');\n            })\n    }\n\n    render() {\n        return (\n            <Container>\n                <h4 className=\"registerHeader\">New Helper Post</h4>\n\n                <Form className=\"register\" onSubmit={this.handleSubmit}>\n                    <FormGroup>\n                        <Input\n                            className=\"helpTitle\"\n                            type=\"select\"\n                            onChange={(e) => { this.setState({ title: e.target.value }) }}\n                            value={this.state.title}>\n                            <option value=\"\"></option>\n                            <option value=\"Rake Leaves\">Rake Leaves</option>\n                            <option value=\"Shovel Snow\">Shovel Snow</option>\n                            <option value=\"Take Out Trash\">Take Out Trash</option>\n                            <option value=\"Walk Dogs\">Walk Dogs</option>\n                            <option value=\"Grocery Run\">Grocery Run</option>\n                            <option value=\"Pharmacy Pickup\">Pharmacy Pickup</option>\n                        </Input>\n                        <Label htmlFor=\"title\" className=\"helpTitle\"></Label>\n                    </FormGroup>\n                    <FormGroup>\n                        <Input\n                            className=\"helpDescription\"\n                            type=\"textarea\"\n                            onChange={(e) => { this.setState({ description: e.target.value }) }}\n                            value={this.state.description}>\n                        </Input>\n                        <Label htmlFor=\"description\" className=\"helpDescription\">Description</Label>\n                    </FormGroup>\n                    <FormGroup>\n                        <Label htmlFor=\"availability\" className=\"availability\">Availability</Label>\n                        <br />\n                        <Availability />\n                    </FormGroup>\n                    <br />\n                    <FormGroup>\n                        <Input\n                            className=\"instances\"\n                            onChange={(e) => { this.setState({ instances: 0 }) }}\n                            value={this.state.instances} />\n                        <Label htmlFor=\"instances\" className=\"instances\">Instances</Label>\n                    </FormGroup>\n                    <FormGroup>\n\n                    </FormGroup>\n                    <FormGroup>\n\n                    </FormGroup>\n                    <FormGroup>\n\n                    </FormGroup>\n                    <Button type=\"submit\">Submit Services Post</Button>\n                </Form>\n            </Container>\n        );\n    }\n}\n\nexport default CreateHelpPost;","/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/home/Menu.tsx",["93"],"import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { Button } from 'reactstrap';\n\nimport CreateHelpPost from '../volunteers/CreateHelpPost';\nimport CreateRequestPost from '../recipients/CreateRequestPost';\nimport ViewHelpPosts from '../volunteers/ViewHelpPosts';\nimport ViewRequestPosts from '../recipients/ViewRequestPosts';\n\n\ntype postProps = {\n  sessionToken: any;\n  // clearToken: any;\n  // updateToken: any;\n}\n\ntype postStates = {\n  title: string;\n  description: string;\n  availability: string;\n  instances: number;\n  date: any;\n  inactiveDate: any;\n  setTitle: (e: any) => any;\n  setDescription: (e: any) => any;\n  setAvailability: (e: any) => any;\n  setInstances: (e: any) => any;\n  setDate: (e: any) => any;\n  setInactiveDate: (e: any) => any;\n  // updateToken: any;\n  // sessionToken: any;\n}\n\nclass Menu extends React.Component<postProps, postStates> {\n  constructor(props: postProps) {\n    super(props);\n    this.state = {\n      title: \"\",\n      description: \"\",\n      availability: \"\",\n      instances: 0,\n      date: \" \",\n      inactiveDate: \" \",\n      // updateToken: \"\",\n      // sessionToken: \"\",\n      setTitle: (e) => {\n        this.setState({\n          title: e\n        })\n      },\n      setDescription: (e) => {\n        this.setState({\n          description: e\n        })\n      },\n      setAvailability: (e) => {\n        this.setState({\n          availability: e\n        })\n      },\n      setInstances: (e) => {\n        this.setState({\n          instances: e\n        })\n      },\n      setDate: (e) => {\n        this.setState({\n          date: e\n        })\n      },\n      setInactiveDate: (e) => {\n        this.setState({\n          inactiveDate: e\n        })\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <br />\n        <br />\n        <Router>\n          <Switch>\n\n            <Route exact path='/menu'>\n              <Button href='/menu/volunteer/create'>Create Service Post</Button>\n              <br></br>\n              <br></br>\n              <Button href='/menu/volunteer/posts'>View Service Posts</Button>\n              <br></br>\n              <br></br>\n              <Button href='/menu/request/create'>Create Request Post</Button>\n              <br></br>\n              <br></br>\n              <Button href='/menu/request/posts'>View Request Posts</Button>\n            </Route>\n\n            <Route path='/menu/volunteer/create'>\n              <CreateHelpPost\n                title={this.state.title}\n                description={this.state.description}\n                availability={this.state.availability}\n                instances={this.state.instances}\n                date={this.state.date}\n                inactiveDate={this.state.inactiveDate}\n                setTitle={this.state.setTitle}\n                setDescription={this.state.setDescription}\n                setAvailability={this.state.setAvailability}\n                setInstances={this.state.setInstances}\n                setDate={this.state.setDate}\n                setInactiveDate={this.state.setInactiveDate}\n                sessionToken={this.props.sessionToken} />\n            </Route>\n\n            <Route path='/menu/volunteer/posts'>\n              <ViewHelpPosts />\n            </Route>\n\n            <Route path='/menu/request/create'>\n              <CreateRequestPost\n                title={this.state.title}\n                description={this.state.description}\n                availability={this.state.availability}\n                instances={this.state.instances}\n                date={this.state.date}\n                inactiveDate={this.state.inactiveDate}\n                setTitle={this.state.setTitle}\n                setDescription={this.state.setDescription}\n                setAvailability={this.state.setAvailability}\n                setInstances={this.state.setInstances}\n                setDate={this.state.setDate}\n                setInactiveDate={this.state.setInactiveDate}\n                sessionToken={this.props.sessionToken} />\n            </Route>\n\n            <Route path='/menu/request/posts'>\n              <ViewRequestPosts />\n            </Route>\n\n          </Switch>\n        </Router>\n      </div>\n\n    )\n  }\n}\n\nexport default Menu;","/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/volunteers/ViewHelpPosts.tsx",["94"],"import React, { Component } from 'react';\nimport { Button, Card, CardHeader, CardTitle, CardText, Container } from 'reactstrap';\n\ntype ViewHelpPostsProps = {\n    sessionToken?: any;\n}\n\ntype ViewHelpPostsState = {\n    helpPosts: any;\n}\n\n\nclass ViewHelpPosts extends React.Component<ViewHelpPostsProps, ViewHelpPostsState> {\n    constructor(props: ViewHelpPostsProps) {\n        super(props)\n        this.fetchHelpPosts = this.fetchHelpPosts.bind(this)\n        this.state = {\n            helpPosts: [],\n        }\n    }\n\n    setHelpPosts = (postArray: any) => {\n        console.log(\"postArray: \", postArray)\n        this.setState({helpPosts: postArray})\n    }\n\n    fetchHelpPosts = () => {\n     fetch(`http://localhost:3000/help`, {\n            method: 'GET',\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': this.props.sessionToken\n            })\n        })\n          .then(response => response.json())\n            .then((data) => {\n                this.setHelpPosts(data)\n            }) \n    }\n\n    componentDidMount() {\n        this.fetchHelpPosts();\n    }\n\n    render() {\n        return (\n            <div>\n                <p>This is the Volunteer Posts Page</p>\n                <div>\n                    {this.state.helpPosts.length > 0 ? (this.state.helpPosts.map((event: any, index: any) => (\n                        <Container key={this.state.helpPosts.id} className=\"serviceCard\">\n                            <Card body inverse style={{ backgroundColor: '#CECECE', borderColor: '#525252', borderWidth: '.25em' }}>\n                                <CardHeader tag=\"h4\">\n                                    Service Available:\n                                    <br />\n                                    {this.state.helpPosts[index].title}\n                                </CardHeader>\n                                <CardTitle>\n                                    {this.state.helpPosts[index].user.username}\n                                </CardTitle>\n                                <CardText>\n                                    posted on\n                                    {this.state.helpPosts[index].date}\n                                </CardText>\n                                <CardText>\n                                    Description:\n                                    {this.state.helpPosts[index].description}\n                                </CardText>\n                                <CardText >\n                                    Availability:\n                                    {this.state.helpPosts[index].availability}\n                                </CardText>\n                                <CardText >\n                                    Instances:\n                                    {this.state.helpPosts[index].instances}\n                                </CardText>\n                                <Button >Claim Service</Button>\n                            </Card>\n                        </Container>\n                    ))\n                    ) : (\n                            <div>\n\n                            </div>\n                        )}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ViewHelpPosts;","/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/recipients/CreateRequestPost.tsx",["95"],"import React, { Component } from 'react';\nimport { Button, Container, Form, FormGroup, Input, Label } from 'reactstrap';\n\ntype RequestProps = {\n    title: string;\n    description: string;\n    availability: string;\n    instances: number;\n    date: string;\n    inactiveDate: string;\n    setTitle: (e: any) => any;\n    setDescription: (e: any) => any;\n    setAvailability: (e: any) => any;\n    setInstances: (e: any) => any;\n    setDate: (e: any) => any;\n    setInactiveDate: (e: any) => any;\n    sessionToken?: any;\n}\n\ntype RequestState = {\n    title: string;\n    description: string;\n    availability: string;\n    instances: number;\n    date: any;\n    inactiveDate: any;\n}\n\n\nclass CreateRequestPost extends React.Component<RequestProps, RequestState> {\n    constructor(props: RequestProps) {\n        super(props);\n        this.state = {\n            title: \"\",\n            description: \"\",\n            availability: \"\",\n            instances: 0,\n            date: \" \",\n            inactiveDate: \" \",\n        }\n    }\n\n    handleSubmit = (event: any) => {\n        event.preventDefault();\n        fetch(`http://localhost:3000/recipient/create`, {\n            method: 'POST',\n            body: JSON.stringify({\n                recipient: {\n                    title: this.props.title, // Dropdown menu\n                    description: this.props.description,\n                    availability: this.props.availability, // Check boxes\n                    instances: this.props.instances,\n                    date: this.props.date, // Auto populate\n                    inactiveDate: this.props.inactiveDate,\n                }\n            }),\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': this.props.sessionToken\n            })\n        })\n            .then((response) => response.json())\n            .then((data) => {\n                console.log(data);\n                this.props.setTitle('');\n                this.props.setDescription('');\n                this.props.setAvailability('');\n                this.props.setInstances('');\n                this.props.setDate('');\n                this.props.setInactiveDate('');\n            })\n    }\n\n\n    render() {\n        return (\n            <Container>\n                <h4 className='registerHeader'>New Request Post</h4>\n\n                <Form className='register' onSubmit={this.handleSubmit}>\n                    <FormGroup>\n                        <Input\n                            className='helpTitle'\n                            type='select'\n                            onChange={(e) => { this.setState({ title: e.target.value }) }}\n                            value={this.state.title}>\n                            <option value=\"\"></option>\n                            <option value=\"Rake Leaves\">Rake Leaves</option>\n                            <option value=\"Shovel Snow\">Shovel Snow</option>\n                            <option value=\"Take Out Trash\">Take Out Trash</option>\n                            <option value=\"Walk Dogs\">Walk Dogs</option>\n                        </Input>\n                        <Label htmlFor=\"title\" className=\"helpTitle\"></Label>\n                    </FormGroup>\n                    <FormGroup>\n                        <Input\n                            className=\"helpDescription\"\n                            type=\"textarea\"\n                            onChange={(e) => { this.setState({ description: e.target.value }) }}\n                            value={this.state.description}>\n                        </Input>\n                        <Label htmlFor=\"description\" className=\"helpDescription\">Description</Label>\n                    </FormGroup>\n                    <FormGroup>\n                        <Input\n                            className=\"instances\"\n                            type=\"checkbox\"\n                            onChange={(e) => { this.setState({ instances: 0 }) }}\n                            value={this.state.instances} />\n                        <Label htmlFor=\"instances\" className=\"instances\">Instances</Label>\n                    </FormGroup>\n                    <FormGroup>\n\n                    </FormGroup>\n                    <FormGroup>\n\n                    </FormGroup>\n                    <FormGroup>\n\n                    </FormGroup>\n                    <Button type=\"submit\">Submit Request Post</Button>\n                </Form>\n           \n            </Container>\n        )\n    }\n}\n\nexport default CreateRequestPost;","/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/recipients/ViewRequestPosts.tsx",["96"],"import React, { Component } from 'react';\nimport { Button, Card, CardHeader, CardTitle, CardText, Container } from 'reactstrap';\n\ntype ViewRequestPostsProps = {\n    sessionToken?: any;\n}\n\ntype ViewRequestPostsState = {\n    requestPosts: any;\n}\n\n\nclass ViewRequestPosts extends React.Component<ViewRequestPostsProps, ViewRequestPostsState> {\n    constructor(props: ViewRequestPostsProps) {\n        super(props)\n        this.fetchRequestPosts = this.fetchRequestPosts.bind(this)\n        this.state = {\n            requestPosts: [],\n        }\n    }\n\n    setRequestPosts = (postArray: any) => {\n        console.log(\"postArray: \", postArray)\n        this.setState({requestPosts: postArray})\n    }\n\n    fetchRequestPosts = () => {\n     fetch(`http://localhost:3000/recipient`, {\n            method: 'GET',\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': this.props.sessionToken\n            })\n        })\n          .then(response => response.json())\n            .then((data) => {\n                this.setRequestPosts(data)\n            }) \n    }\n\n    componentDidMount() {\n        this.fetchRequestPosts();\n    }\n\n    render() {\n        return (\n            <div>\n                <p>This is the Recipient Posts Page</p>\n                <div>\n                    {this.state.requestPosts.length > 0 ? (this.state.requestPosts.map((event: any, index: any) => (\n                        <Container key={this.state.requestPosts.id} className=\"serviceCard\">\n                            <Card body inverse style={{ backgroundColor: '#CECECE', borderColor: '#525252', borderWidth: '.25em' }}>\n                                <CardHeader tag=\"h4\">\n                                    Service Available:\n                                    <br />\n                                    {this.state.requestPosts[index].title}\n                                </CardHeader>\n                                <CardTitle>\n                                    {this.state.requestPosts[index].user.username}\n                                </CardTitle>\n                                <CardText>\n                                    posted on \n                                    <br />\n                                    {this.state.requestPosts[index].createdAt}\n                                </CardText>\n                                <CardText>\n                                    Description:\n                                    {this.state.requestPosts[index].description}\n                                </CardText>\n                                <CardText >\n                                    Availability:\n                                    <br />\n                                    {this.state.requestPosts[index].availability}\n                                </CardText>\n                                <CardText >\n                                    Instances:\n                                    {this.state.requestPosts[index].instances}\n                                </CardText>\n                                <Button >Claim Service</Button>\n                            </Card>\n                        </Container>\n                        \n                    ))\n                    ) : (\n                            <div>\n\n                            </div>\n                        )}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ViewRequestPosts;","/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/forms/Availability.tsx",["97"],"import React, { Component } from 'react'\nimport { Input } from 'reactstrap';\n\nimport CheckBox from './CheckBox';\n\ntype AvailabilityStates = {\n    availability: any;\n}\n\nclass Availability extends React.Component<{}, AvailabilityStates> {\n    constructor(props: any) {\n        super(props)\n        this.state = {\n            availability: [\n                { id: 1, value: \"Sunday\", isChecked: false },\n                { id: 2, value: \"Monday\", isChecked: false },\n                { id: 3, value: \"Tuesday\", isChecked: false },\n                { id: 4, value: \"Wednesday\", isChecked: false },\n                { id: 5, value: \"Thursday\", isChecked: false },\n                { id: 6, value: \"Friday\", isChecked: false },\n                { id: 7, value: \"Saturday\", isChecked: false }\n            ]\n        }\n    }\n\n    handleAllChecked = (event: any) => {\n        let availability = this.state.availability\n\n        availability.forEach((availability: any) => \n            availability.isChecked = event.target.checked)\n\n        this.setState({ availability: availability })\n    }\n\n    handleCheckChildElement = (event: any) => {\n        let availability = this.state.availability\n\n        availability.forEach((availability: any) => {\n            if (availability.value === event.target.value)\n                availability.isChecked = event.target.checked\n        })\n\n        this.setState({ availability: availability })\n    }\n\n    render() {\n        return (\n            <div>\n                <Input\n                    type=\"checkbox\"\n                    className=\"checkbox\"\n                    onChange={this.handleAllChecked}\n                    value=\"checkedall\" />\n                    Check / Uncheck All\n                <ul>\n                    {this.state.availability.map((availability: any, index: any) => {\n                        return (<CheckBox key={index} handleCheckChildElement={this.handleCheckChildElement}  {...availability} />)\n                    })\n                    }\n                </ul>\n            </div>\n        );\n    }\n}\n\nexport default Availability;","/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/forms/CheckBox.tsx",[],"/Users/Denise/Desktop/ElevenFiftyProjects/RedBadge/Projects/PlatinumRule/platinum-rule-client/src/components/home/HomePage.tsx",["98","99"],{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":1,"column":17,"nodeType":"106","messageId":"107","endLine":1,"endColumn":26},{"ruleId":"104","severity":1,"message":"108","line":9,"column":8,"nodeType":"106","messageId":"107","endLine":9,"endColumn":12},{"ruleId":"104","severity":1,"message":"105","line":1,"column":17,"nodeType":"106","messageId":"107","endLine":1,"endColumn":26},{"ruleId":"104","severity":1,"message":"109","line":2,"column":10,"nodeType":"106","messageId":"107","endLine":2,"endColumn":16},{"ruleId":"104","severity":1,"message":"105","line":1,"column":17,"nodeType":"106","messageId":"107","endLine":1,"endColumn":26},{"ruleId":"104","severity":1,"message":"105","line":1,"column":17,"nodeType":"106","messageId":"107","endLine":1,"endColumn":26},{"ruleId":"104","severity":1,"message":"105","line":1,"column":17,"nodeType":"106","messageId":"107","endLine":1,"endColumn":26},{"ruleId":"104","severity":1,"message":"105","line":1,"column":17,"nodeType":"106","messageId":"107","endLine":1,"endColumn":26},{"ruleId":"104","severity":1,"message":"105","line":1,"column":17,"nodeType":"106","messageId":"107","endLine":1,"endColumn":26},{"ruleId":"104","severity":1,"message":"105","line":1,"column":17,"nodeType":"106","messageId":"107","endLine":1,"endColumn":26},{"ruleId":"104","severity":1,"message":"105","line":1,"column":17,"nodeType":"106","messageId":"107","endLine":1,"endColumn":26},{"ruleId":"104","severity":1,"message":"105","line":1,"column":17,"nodeType":"106","messageId":"107","endLine":1,"endColumn":26},{"ruleId":"104","severity":1,"message":"105","line":1,"column":17,"nodeType":"106","messageId":"107","endLine":1,"endColumn":26},{"ruleId":"104","severity":1,"message":"105","line":1,"column":17,"nodeType":"106","messageId":"107","endLine":1,"endColumn":26},{"ruleId":"104","severity":1,"message":"105","line":1,"column":17,"nodeType":"106","messageId":"107","endLine":1,"endColumn":26},{"ruleId":"110","severity":1,"message":"111","line":9,"column":3,"nodeType":"112","messageId":"113","endLine":11,"endColumn":4},"no-native-reassign",["114"],"no-negated-in-lhs",["115"],"@typescript-eslint/no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'Auth' is defined but never used.","'Button' is defined but never used.","@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-global-assign","no-unsafe-negation"]